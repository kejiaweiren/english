2018-12-17 12:58:16,036 INFO (StartupInfoLogger.java:50)- Starting EnglishApplication on seari-PC with PID 9336 (started by seari in E:\work\english\词汇\english)
2018-12-17 12:58:16,036 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.0.RELEASE, Spring v5.1.2.RELEASE
2018-12-17 12:58:16,036 INFO (SpringApplication.java:675)- No active profile set, falling back to default profiles: default
2018-12-17 12:58:21,710 INFO (StartupInfoLogger.java:59)- Started EnglishApplication in 7.729 seconds (JVM running for 10.189)
2018-12-17 12:58:45,136 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 12:58:45,158 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 12:58:45,311 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 12:58:45,380 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 12:58:45,381 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: bar(String)
2018-12-17 12:58:45,391 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 12:58:45,828 INFO (WordController.java:133)- coreWordPage method: pn:null,coreWord:null
2018-12-17 12:58:45,910 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word 
2018-12-17 12:58:45,911 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 12:58:45,914 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 12:58:45,917 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word LIMIT ? 
2018-12-17 12:58:45,918 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 10(Integer)
2018-12-17 12:58:45,921 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 12:59:08,326 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 12:59:08,327 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 12:59:08,329 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 12:59:08,331 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 12:59:08,332 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: appear(String)
2018-12-17 12:59:08,334 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 12:59:08,350 INFO (WordController.java:133)- coreWordPage method: pn:null,coreWord:null
2018-12-17 12:59:08,350 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word 
2018-12-17 12:59:08,350 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 12:59:08,375 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 12:59:08,376 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word LIMIT ? 
2018-12-17 12:59:08,378 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 10(Integer)
2018-12-17 12:59:08,387 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 12:59:51,280 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 12:59:51,281 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 12:59:51,286 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 12:59:51,288 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 12:59:51,289 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: mobile(String)
2018-12-17 12:59:51,299 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 12:59:51,358 INFO (WordController.java:133)- coreWordPage method: pn:null,coreWord:null
2018-12-17 12:59:51,360 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word 
2018-12-17 12:59:51,360 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 12:59:51,365 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 12:59:51,367 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word LIMIT ? 
2018-12-17 12:59:51,367 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 10(Integer)
2018-12-17 12:59:51,373 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 13:00:32,939 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 13:00:32,940 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:00:32,943 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:00:44,808 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 13:00:44,809 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:00:44,812 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:00:44,814 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 13:00:44,815 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: contrast(String)
2018-12-17 13:00:44,829 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:00:44,848 INFO (WordController.java:133)- coreWordPage method: pn:null,coreWord:null
2018-12-17 13:00:44,853 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word 
2018-12-17 13:00:44,854 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:00:44,860 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:00:44,866 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word LIMIT ? 
2018-12-17 13:00:44,867 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 10(Integer)
2018-12-17 13:00:44,869 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 13:00:53,551 INFO (WordController.java:133)- coreWordPage method: pn:5,coreWord:null
2018-12-17 13:00:53,551 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word 
2018-12-17 13:00:53,551 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:00:53,551 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:00:53,551 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word LIMIT ?, ? 
2018-12-17 13:00:53,551 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 40(Integer), 10(Integer)
2018-12-17 13:00:53,551 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 13:01:04,791 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 13:01:04,791 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:01:04,794 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:01:04,796 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 13:01:04,797 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: pathogen(String)
2018-12-17 13:01:04,807 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:01:04,843 INFO (WordController.java:133)- coreWordPage method: pn:null,coreWord:null
2018-12-17 13:01:04,847 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word 
2018-12-17 13:01:04,848 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:01:04,851 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:01:04,852 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word LIMIT ? 
2018-12-17 13:01:04,853 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 10(Integer)
2018-12-17 13:01:04,856 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 13:02:21,406 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 13:02:21,407 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:02:21,409 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:02:21,411 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 13:02:21,413 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: inform(String)
2018-12-17 13:02:21,426 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:02:21,441 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:null
2018-12-17 13:02:21,443 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word 
2018-12-17 13:02:21,446 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:02:21,449 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:02:21,450 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word LIMIT ? 
2018-12-17 13:02:21,452 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 10(Integer)
2018-12-17 13:02:21,455 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 13:02:22,099 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 13:02:22,099 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:02:22,101 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:02:22,103 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 13:02:22,104 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: stat(String)
2018-12-17 13:02:22,116 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:02:22,122 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:null
2018-12-17 13:02:22,124 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word 
2018-12-17 13:02:22,124 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:02:22,127 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:02:22,129 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word LIMIT ? 
2018-12-17 13:02:22,129 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 10(Integer)
2018-12-17 13:02:22,133 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 13:02:23,537 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 13:02:23,538 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:02:23,540 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:02:23,542 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 13:02:23,543 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: nest(String)
2018-12-17 13:02:23,552 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:02:23,559 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:null
2018-12-17 13:02:23,561 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word 
2018-12-17 13:02:23,562 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:02:23,569 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:02:23,570 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word LIMIT ? 
2018-12-17 13:02:23,572 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 10(Integer)
2018-12-17 13:02:23,574 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 13:02:24,385 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 13:02:24,386 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:02:24,389 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:02:24,391 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 13:02:24,392 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: form(String)
2018-12-17 13:02:24,399 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:02:24,406 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:null
2018-12-17 13:02:24,413 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word 
2018-12-17 13:02:24,414 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:02:24,417 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:02:24,418 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word LIMIT ? 
2018-12-17 13:02:24,418 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 10(Integer)
2018-12-17 13:02:24,420 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 13:02:24,896 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 13:02:24,897 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:02:24,899 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:02:25,258 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 13:02:25,258 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:02:25,260 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:02:25,261 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 13:02:25,261 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: explicate(String)
2018-12-17 13:02:25,269 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:02:25,277 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:null
2018-12-17 13:02:25,279 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word 
2018-12-17 13:02:25,279 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:02:25,284 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:02:25,285 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word LIMIT ? 
2018-12-17 13:02:25,285 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 10(Integer)
2018-12-17 13:02:25,286 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 13:02:26,297 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 13:02:26,298 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:02:26,299 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:02:26,300 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 13:02:26,301 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: legitimate(String)
2018-12-17 13:02:26,310 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:02:26,317 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:null
2018-12-17 13:02:26,320 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word 
2018-12-17 13:02:26,320 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:02:26,322 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:02:26,322 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word LIMIT ? 
2018-12-17 13:02:26,323 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 10(Integer)
2018-12-17 13:02:26,324 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 13:02:26,901 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 13:02:26,902 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:02:26,903 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:02:26,906 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 13:02:26,907 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: deconstruct(String)
2018-12-17 13:02:26,917 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:02:26,923 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:null
2018-12-17 13:02:26,925 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word 
2018-12-17 13:02:26,927 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:02:26,930 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:02:26,931 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word LIMIT ? 
2018-12-17 13:02:26,932 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 10(Integer)
2018-12-17 13:02:26,933 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 13:03:07,572 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 13:03:07,573 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:03:07,575 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:03:07,576 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 13:03:07,577 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: price(String)
2018-12-17 13:03:07,586 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:03:11,822 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:null
2018-12-17 13:03:11,822 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word 
2018-12-17 13:03:11,822 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:03:11,822 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:03:11,822 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word LIMIT ? 
2018-12-17 13:03:11,822 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 10(Integer)
2018-12-17 13:03:11,841 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 13:03:19,225 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 13:03:19,225 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:03:19,231 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:03:20,892 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 13:03:20,892 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:03:20,894 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:03:20,897 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 13:03:20,898 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: fluence(String)
2018-12-17 13:03:20,909 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:03:26,826 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:null
2018-12-17 13:03:26,842 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word 
2018-12-17 13:03:26,842 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:03:26,842 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:03:26,857 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word LIMIT ? 
2018-12-17 13:03:26,859 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 10(Integer)
2018-12-17 13:03:26,861 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 13:05:18,789 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 13:05:18,791 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:05:18,794 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:05:18,796 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 13:05:18,796 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: statistic(String)
2018-12-17 13:05:18,806 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:05:18,841 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:statistic
2018-12-17 13:05:18,866 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 13:05:18,867 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: statistic(String)
2018-12-17 13:05:18,875 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:05:18,876 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 13:05:18,877 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: statistic(String), 10(Integer)
2018-12-17 13:05:18,890 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 7
2018-12-17 13:05:21,199 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 13:05:21,199 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:05:21,201 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:05:21,202 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 13:05:21,203 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: organ(String)
2018-12-17 13:05:21,214 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:05:21,223 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:organ
2018-12-17 13:05:21,227 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 13:05:21,228 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: organ(String)
2018-12-17 13:05:21,232 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:05:21,235 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 13:05:21,238 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: organ(String), 10(Integer)
2018-12-17 13:05:21,246 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 13:05:23,078 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 13:05:23,078 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:05:23,095 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:05:23,095 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 13:05:23,095 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: express(String)
2018-12-17 13:05:23,110 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:05:23,110 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:express
2018-12-17 13:05:23,110 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 13:05:23,110 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: express(String)
2018-12-17 13:05:23,126 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:05:23,126 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 13:05:23,126 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: express(String), 10(Integer)
2018-12-17 13:05:23,126 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 13:05:28,236 INFO (WordController.java:133)- coreWordPage method: pn:2,coreWord:null
2018-12-17 13:05:28,236 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word 
2018-12-17 13:05:28,236 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:05:28,236 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:05:28,252 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word LIMIT ?, ? 
2018-12-17 13:05:28,253 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 10(Integer), 10(Integer)
2018-12-17 13:05:28,256 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 13:05:32,440 INFO (WordController.java:133)- coreWordPage method: pn:3,coreWord:null
2018-12-17 13:05:32,440 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word 
2018-12-17 13:05:32,440 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:05:32,440 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:05:32,440 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word LIMIT ?, ? 
2018-12-17 13:05:32,440 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 20(Integer), 10(Integer)
2018-12-17 13:05:32,456 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 13:07:38,529 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 13:07:38,533 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:07:38,535 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:07:38,542 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 13:07:38,546 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: neural(String)
2018-12-17 13:07:38,558 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:07:38,601 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:neural
2018-12-17 13:07:38,607 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 13:07:38,608 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: neural(String)
2018-12-17 13:07:38,611 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:07:38,612 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 13:07:38,612 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: neural(String), 10(Integer)
2018-12-17 13:07:38,622 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 13:07:41,377 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 13:07:41,378 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:07:41,382 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:07:41,385 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 13:07:41,386 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: parent(String)
2018-12-17 13:07:41,396 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:07:41,421 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:parent
2018-12-17 13:07:41,423 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 13:07:41,424 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: parent(String)
2018-12-17 13:07:41,427 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:07:41,430 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 13:07:41,431 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: parent(String), 10(Integer)
2018-12-17 13:07:41,439 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 13:07:44,861 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 13:07:44,861 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:07:44,877 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:07:47,109 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 13:07:47,110 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:07:47,112 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:07:47,114 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 13:07:47,115 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: obstetric(String)
2018-12-17 13:07:47,120 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:07:47,151 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:obstetric
2018-12-17 13:07:47,151 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 13:07:47,151 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: obstetric(String)
2018-12-17 13:07:47,151 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:07:47,151 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 13:07:47,151 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: obstetric(String), 10(Integer)
2018-12-17 13:07:47,151 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 3
2018-12-17 13:07:49,438 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 13:07:49,438 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:07:49,438 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:07:49,438 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 13:07:49,438 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: structure(String)
2018-12-17 13:07:49,453 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:07:49,470 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:structure
2018-12-17 13:07:49,470 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 13:07:49,470 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: structure(String)
2018-12-17 13:07:49,486 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:07:49,486 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 13:07:49,486 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: structure(String), 10(Integer)
2018-12-17 13:07:49,486 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 13:07:51,663 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 13:07:51,663 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:07:51,663 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:07:51,679 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 13:07:51,679 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: complete(String)
2018-12-17 13:07:51,698 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:07:51,700 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:complete
2018-12-17 13:07:51,700 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 13:07:51,700 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: complete(String)
2018-12-17 13:07:51,716 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:07:51,716 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 13:07:51,716 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: complete(String), 10(Integer)
2018-12-17 13:07:51,716 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 13:07:58,004 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 13:07:58,004 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:07:58,020 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:07:58,020 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 13:07:58,020 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: circumstance(String)
2018-12-17 13:07:58,040 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:07:58,048 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:circumstance
2018-12-17 13:07:58,050 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 13:07:58,051 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: circumstance(String)
2018-12-17 13:07:58,054 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:07:58,054 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 13:07:58,055 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: circumstance(String), 10(Integer)
2018-12-17 13:07:58,065 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 3
2018-12-17 13:08:00,210 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 13:08:00,210 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:08:00,210 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:08:45,466 INFO (WordController.java:88)- page method: pn:1,word:
2018-12-17 13:08:45,468 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word 
2018-12-17 13:08:45,468 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:08:45,471 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:08:45,472 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word LIMIT ? 
2018-12-17 13:08:45,472 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 10(Integer)
2018-12-17 13:08:45,475 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 13:08:49,294 INFO (WordController.java:88)- page method: pn:1,word:steel
2018-12-17 13:08:49,298 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (word LIKE ?) 
2018-12-17 13:08:49,299 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: %steel%(String)
2018-12-17 13:08:49,351 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:08:49,352 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word like ? ) LIMIT ? 
2018-12-17 13:08:49,353 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: %steel%(String), 10(Integer)
2018-12-17 13:08:49,358 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 13:08:51,681 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word where id = ? 
2018-12-17 13:08:51,682 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 1330(Integer)
2018-12-17 13:08:51,683 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:09:48,816 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 13:09:48,817 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:09:48,820 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:09:48,821 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 13:09:48,822 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: privilege(String)
2018-12-17 13:09:48,830 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:09:48,839 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:privilege
2018-12-17 13:09:48,841 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 13:09:48,842 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: privilege(String)
2018-12-17 13:09:48,845 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:09:48,846 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 13:09:48,847 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: privilege(String), 10(Integer)
2018-12-17 13:09:48,858 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 3
2018-12-17 13:09:50,896 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 13:09:50,896 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:09:50,896 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:09:50,912 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 13:09:50,913 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: dialect(String)
2018-12-17 13:09:50,924 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:09:50,975 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:dialect
2018-12-17 13:09:50,980 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 13:09:50,981 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: dialect(String)
2018-12-17 13:09:50,987 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:09:50,988 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 13:09:50,989 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: dialect(String), 10(Integer)
2018-12-17 13:09:51,003 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 13:09:52,252 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 13:09:52,252 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:09:52,268 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:09:52,268 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 13:09:52,268 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: parent(String)
2018-12-17 13:09:52,285 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:09:52,285 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:parent
2018-12-17 13:09:52,285 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 13:09:52,285 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: parent(String)
2018-12-17 13:09:52,300 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:09:52,300 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 13:09:52,300 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: parent(String), 10(Integer)
2018-12-17 13:09:52,300 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 13:09:53,156 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 13:09:53,156 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:09:53,156 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:09:53,156 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 13:09:53,156 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: assess(String)
2018-12-17 13:09:53,171 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:09:53,189 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:assess
2018-12-17 13:09:53,191 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 13:09:53,191 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: assess(String)
2018-12-17 13:09:53,199 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:09:53,200 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 13:09:53,201 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: assess(String), 10(Integer)
2018-12-17 13:09:53,206 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 13:09:53,800 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 13:09:53,800 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:09:53,800 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:09:53,800 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 13:09:53,800 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: convey(String)
2018-12-17 13:09:53,835 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:09:53,843 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:convey
2018-12-17 13:09:53,845 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 13:09:53,846 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: convey(String)
2018-12-17 13:09:53,848 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:09:53,849 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 13:09:53,849 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: convey(String), 10(Integer)
2018-12-17 13:09:53,859 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-12-17 13:09:54,532 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 13:09:54,532 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:09:54,532 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:09:54,532 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 13:09:54,532 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: transform(String)
2018-12-17 13:09:54,532 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:09:54,532 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:transform
2018-12-17 13:09:54,548 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 13:09:54,549 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: transform(String)
2018-12-17 13:09:54,551 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:09:54,551 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 13:09:54,552 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: transform(String), 10(Integer)
2018-12-17 13:09:54,559 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 8
2018-12-17 13:09:55,098 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 13:09:55,113 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:09:55,113 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:09:55,113 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 13:09:55,113 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: obsess(String)
2018-12-17 13:09:55,132 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:09:55,165 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:obsess
2018-12-17 13:09:55,168 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 13:09:55,168 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: obsess(String)
2018-12-17 13:09:55,171 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:09:55,171 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 13:09:55,172 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: obsess(String), 10(Integer)
2018-12-17 13:09:55,180 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 9
2018-12-17 13:09:55,579 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 13:09:55,579 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:09:55,579 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:09:55,579 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 13:09:55,579 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: distress(String)
2018-12-17 13:09:55,610 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:09:55,611 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:distress
2018-12-17 13:09:55,611 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 13:09:55,611 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: distress(String)
2018-12-17 13:09:55,611 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:09:55,611 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 13:09:55,611 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: distress(String), 10(Integer)
2018-12-17 13:09:55,627 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 5
2018-12-17 13:09:56,026 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 13:09:56,026 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:09:56,042 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:09:56,042 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 13:09:56,042 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: intelligent(String)
2018-12-17 13:09:56,057 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:09:56,057 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:intelligent
2018-12-17 13:09:56,057 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 13:09:56,057 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: intelligent(String)
2018-12-17 13:09:56,076 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:09:56,076 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 13:09:56,077 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: intelligent(String), 10(Integer)
2018-12-17 13:09:56,084 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 13:09:56,301 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 13:09:56,301 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:09:56,301 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:09:56,333 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:insurrection
2018-12-17 13:09:56,336 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 13:09:56,337 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: insurrection(String)
2018-12-17 13:09:56,339 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:09:56,339 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 13:09:56,340 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: insurrection(String), 10(Integer)
2018-12-17 13:09:56,348 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 3
2018-12-17 13:09:56,530 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 13:09:56,530 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:09:56,546 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:09:56,546 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 13:09:56,546 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: accomplish(String)
2018-12-17 13:09:56,567 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:09:56,584 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:accomplish
2018-12-17 13:09:56,584 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 13:09:56,584 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: accomplish(String)
2018-12-17 13:09:56,608 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:09:56,609 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 13:09:56,610 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: accomplish(String), 10(Integer)
2018-12-17 13:09:56,623 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 3
2018-12-17 13:09:56,789 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 13:09:56,789 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:09:56,789 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:09:56,806 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 13:09:56,807 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: stress(String)
2018-12-17 13:09:56,826 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:09:56,834 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:stress
2018-12-17 13:09:56,835 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 13:09:56,836 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: stress(String)
2018-12-17 13:09:56,839 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:09:56,840 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 13:09:56,840 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: stress(String), 10(Integer)
2018-12-17 13:09:56,849 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 13:09:57,044 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 13:09:57,044 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:09:57,060 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:09:57,060 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 13:09:57,060 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: music(String)
2018-12-17 13:09:57,080 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:09:57,082 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:music
2018-12-17 13:09:57,082 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 13:09:57,082 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: music(String)
2018-12-17 13:09:57,082 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:09:57,097 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 13:09:57,097 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: music(String), 10(Integer)
2018-12-17 13:09:57,097 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 13:28:50,494 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 13:28:50,495 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:28:50,503 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:28:50,504 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 13:28:50,505 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: legion(String)
2018-12-17 13:28:50,522 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:28:50,579 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:legion
2018-12-17 13:28:50,581 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 13:28:50,584 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: legion(String)
2018-12-17 13:28:50,598 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:28:50,598 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 13:28:50,599 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: legion(String), 10(Integer)
2018-12-17 13:28:50,620 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 3
2018-12-17 13:28:51,570 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 13:28:51,571 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:28:51,574 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:28:51,575 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 13:28:51,575 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: detest(String)
2018-12-17 13:28:51,584 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:28:51,590 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:detest
2018-12-17 13:28:51,594 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 13:28:51,595 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: detest(String)
2018-12-17 13:28:51,598 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:28:51,599 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 13:28:51,599 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: detest(String), 10(Integer)
2018-12-17 13:28:51,606 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-12-17 13:28:56,475 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 13:28:56,490 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 13:28:56,490 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:28:56,490 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 13:28:56,490 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: obsess(String)
2018-12-17 13:28:56,508 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:28:56,508 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:obsess
2018-12-17 13:28:56,524 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 13:28:56,524 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: obsess(String)
2018-12-17 13:28:56,524 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 13:28:56,524 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 13:28:56,524 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: obsess(String), 10(Integer)
2018-12-17 13:28:56,540 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 9
2018-12-17 15:42:16,795 INFO (StartupInfoLogger.java:50)- Starting EnglishApplication on seari-PC with PID 8268 (started by seari in E:\work\english\词汇\english)
2018-12-17 15:42:16,800 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.0.RELEASE, Spring v5.1.2.RELEASE
2018-12-17 15:42:16,802 INFO (SpringApplication.java:675)- No active profile set, falling back to default profiles: default
2018-12-17 15:42:23,142 INFO (StartupInfoLogger.java:59)- Started EnglishApplication in 8.657 seconds (JVM running for 14.9)
2018-12-17 15:50:58,859 INFO (WordController.java:88)- page method: pn:1,word:
2018-12-17 15:50:59,456 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word 
2018-12-17 15:50:59,475 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 15:50:59,689 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 15:50:59,692 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word LIMIT ? 
2018-12-17 15:50:59,692 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 10(Integer)
2018-12-17 15:50:59,717 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 15:51:03,314 INFO (WordController.java:88)- page method: pn:1,word:union
2018-12-17 15:51:03,326 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (word LIKE ?) 
2018-12-17 15:51:03,328 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: %union%(String)
2018-12-17 15:51:03,360 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 15:51:15,100 INFO (WordController.java:88)- page method: pn:1,word:uniform 
2018-12-17 15:51:15,106 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (word LIKE ?) 
2018-12-17 15:51:15,107 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: %uniform %(String)
2018-12-17 15:51:15,111 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 15:51:17,171 INFO (WordController.java:88)- page method: pn:1,word:uniform
2018-12-17 15:51:17,174 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (word LIKE ?) 
2018-12-17 15:51:17,175 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: %uniform%(String)
2018-12-17 15:51:17,177 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 15:51:17,178 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word like ? ) LIMIT ? 
2018-12-17 15:51:17,179 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: %uniform%(String), 10(Integer)
2018-12-17 15:51:17,190 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-12-17 15:51:22,438 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word where id = ? 
2018-12-17 15:51:22,439 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 254(Integer)
2018-12-17 15:51:22,468 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 15:56:12,708 INFO (WordController.java:88)- page method: pn:1,word:uni
2018-12-17 15:56:12,712 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (word LIKE ?) 
2018-12-17 15:56:12,713 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: %uni%(String)
2018-12-17 15:56:12,717 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 15:56:12,719 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word like ? ) LIMIT ? 
2018-12-17 15:56:12,720 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: %uni%(String), 10(Integer)
2018-12-17 15:56:12,724 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 15:56:22,822 INFO (WordController.java:88)- page method: pn:2,word:uni
2018-12-17 15:56:22,833 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (word LIKE ?) 
2018-12-17 15:56:22,836 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: %uni%(String)
2018-12-17 15:56:22,844 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 15:56:22,845 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word like ? ) LIMIT ?, ? 
2018-12-17 15:56:22,846 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: %uni%(String), 10(Integer), 10(Integer)
2018-12-17 15:56:22,854 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 8
2018-12-17 15:56:35,041 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word where id = ? 
2018-12-17 15:56:35,042 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 866(Integer)
2018-12-17 15:56:35,046 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 15:59:59,970 INFO (WordController.java:88)- page method: pn:1,word:uni
2018-12-17 15:59:59,977 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (word LIKE ?) 
2018-12-17 15:59:59,978 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: %uni%(String)
2018-12-17 15:59:59,983 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 15:59:59,984 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word like ? ) LIMIT ? 
2018-12-17 15:59:59,985 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: %uni%(String), 10(Integer)
2018-12-17 15:59:59,989 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:00:49,593 INFO (WordController.java:88)- page method: pn:1,word:
2018-12-17 16:00:49,602 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word 
2018-12-17 16:00:49,603 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:00:49,608 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:00:49,610 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word LIMIT ? 
2018-12-17 16:00:49,613 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 10(Integer)
2018-12-17 16:00:49,617 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:00:51,799 INFO (WordController.java:88)- page method: pn:1,word:
2018-12-17 16:00:51,802 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word 
2018-12-17 16:00:51,803 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:00:51,805 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:00:51,807 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word LIMIT ? 
2018-12-17 16:00:51,808 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 10(Integer)
2018-12-17 16:00:51,810 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:01:32,109 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:01:32,109 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:01:32,224 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:01:32,225 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:01:32,226 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: instruct(String)
2018-12-17 16:01:32,234 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:01:32,243 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:instruct
2018-12-17 16:01:32,248 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:01:32,249 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: instruct(String)
2018-12-17 16:01:32,252 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:01:32,254 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:01:32,254 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: instruct(String), 10(Integer)
2018-12-17 16:01:32,258 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:02:06,156 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:02:06,157 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:02:06,160 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:02:06,164 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:02:06,165 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: impress(String)
2018-12-17 16:02:06,193 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:02:06,207 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:impress
2018-12-17 16:02:06,209 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:02:06,210 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: impress(String)
2018-12-17 16:02:06,213 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:02:06,214 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:02:06,218 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: impress(String), 10(Integer)
2018-12-17 16:02:06,229 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:02:07,534 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:02:07,535 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:02:07,629 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:02:07,634 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:02:07,636 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: legitimate(String)
2018-12-17 16:02:07,647 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:02:07,699 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:02:07,700 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:02:07,702 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:02:07,704 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:02:07,705 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: stat(String)
2018-12-17 16:02:07,717 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:02:07,729 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:stat
2018-12-17 16:02:07,733 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:02:07,735 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: stat(String)
2018-12-17 16:02:07,738 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:02:07,739 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:02:07,740 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: stat(String), 10(Integer)
2018-12-17 16:02:07,747 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:02:19,173 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:02:19,175 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:02:19,179 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:02:19,181 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:02:19,183 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: bar(String)
2018-12-17 16:02:19,208 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:02:19,221 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:bar
2018-12-17 16:02:19,223 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:02:19,224 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: bar(String)
2018-12-17 16:02:19,235 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:02:19,236 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:02:19,237 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: bar(String), 10(Integer)
2018-12-17 16:02:19,251 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:03:29,810 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:03:29,811 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:03:29,813 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:03:29,815 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:03:29,816 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: form(String)
2018-12-17 16:03:29,826 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:03:29,857 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:form
2018-12-17 16:03:29,860 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:03:29,863 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: form(String)
2018-12-17 16:03:29,866 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:03:29,867 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:03:29,868 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: form(String), 10(Integer)
2018-12-17 16:03:29,871 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:03:30,770 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:03:30,771 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:03:30,773 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:03:30,775 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:03:30,775 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: organ(String)
2018-12-17 16:03:30,783 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:03:30,811 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:organ
2018-12-17 16:03:30,813 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:03:30,814 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: organ(String)
2018-12-17 16:03:30,817 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:03:30,818 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:03:30,820 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: organ(String), 10(Integer)
2018-12-17 16:03:30,827 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:03:31,022 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:03:31,025 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:03:31,027 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:03:31,191 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:03:31,192 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:03:31,194 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:03:31,196 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:03:31,196 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: state(String)
2018-12-17 16:03:31,221 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:03:31,353 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:03:31,353 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:03:31,355 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:03:31,357 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:03:31,358 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: reside(String)
2018-12-17 16:03:31,368 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:03:31,375 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:reside
2018-12-17 16:03:31,378 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:03:31,379 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: reside(String)
2018-12-17 16:03:31,383 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:03:31,384 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:03:31,385 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: reside(String), 10(Integer)
2018-12-17 16:03:31,392 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:03:57,333 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:03:57,334 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:03:57,336 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:03:57,338 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:03:57,339 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: college(String)
2018-12-17 16:03:57,352 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:03:57,501 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:03:57,502 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:03:57,503 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:03:57,505 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:03:57,506 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: test(String)
2018-12-17 16:03:57,515 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:03:57,564 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:test
2018-12-17 16:03:57,567 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:03:57,567 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: test(String)
2018-12-17 16:03:57,584 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:03:57,588 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:03:57,589 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: test(String), 10(Integer)
2018-12-17 16:03:57,602 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:03:57,793 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:03:57,794 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:03:57,797 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:03:57,799 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:03:57,799 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: remote(String)
2018-12-17 16:03:57,809 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:03:57,819 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:remote
2018-12-17 16:03:57,833 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:03:57,834 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: remote(String)
2018-12-17 16:03:57,837 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:03:57,838 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:03:57,839 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: remote(String), 10(Integer)
2018-12-17 16:03:57,854 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 5
2018-12-17 16:03:58,135 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:03:58,135 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:03:58,137 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:03:58,139 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:03:58,140 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: implement(String)
2018-12-17 16:03:58,150 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:03:58,157 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:implement
2018-12-17 16:03:58,159 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:03:58,160 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: implement(String)
2018-12-17 16:03:58,164 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:03:58,165 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:03:58,166 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: implement(String), 10(Integer)
2018-12-17 16:03:58,176 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 3
2018-12-17 16:04:46,883 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:04:46,884 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:04:46,895 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:04:46,899 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:04:46,900 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: dialect(String)
2018-12-17 16:04:46,912 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:04:46,949 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:dialect
2018-12-17 16:04:46,952 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:04:46,953 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: dialect(String)
2018-12-17 16:04:46,956 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:04:46,957 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:04:46,957 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: dialect(String), 10(Integer)
2018-12-17 16:04:46,969 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:04:57,985 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:04:57,986 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:04:57,988 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:04:57,990 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:04:57,991 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: express(String)
2018-12-17 16:04:58,000 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:04:58,018 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:express
2018-12-17 16:04:58,021 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:04:58,022 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: express(String)
2018-12-17 16:04:58,028 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:04:58,029 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:04:58,030 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: express(String), 10(Integer)
2018-12-17 16:04:58,034 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:05:06,100 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:05:06,102 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:05:06,105 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:05:06,107 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:05:06,108 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: employ(String)
2018-12-17 16:05:06,128 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:05:06,134 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:employ
2018-12-17 16:05:06,136 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:05:06,136 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: employ(String)
2018-12-17 16:05:06,138 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:05:06,139 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:05:06,139 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: employ(String), 10(Integer)
2018-12-17 16:05:06,147 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:05:40,531 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:05:40,532 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:05:40,534 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:05:40,535 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:05:40,536 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: surgeon(String)
2018-12-17 16:05:40,546 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:05:40,589 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:surgeon
2018-12-17 16:05:40,592 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:05:40,592 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: surgeon(String)
2018-12-17 16:05:40,595 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:05:40,596 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:05:40,596 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: surgeon(String), 10(Integer)
2018-12-17 16:05:40,606 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 7
2018-12-17 16:05:41,375 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:05:41,376 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:05:41,381 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:05:41,383 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:05:41,384 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: eligible(String)
2018-12-17 16:05:41,396 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:05:41,408 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:eligible
2018-12-17 16:05:41,410 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:05:41,411 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: eligible(String)
2018-12-17 16:05:41,414 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:05:41,415 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:05:41,416 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: eligible(String), 10(Integer)
2018-12-17 16:05:41,426 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-12-17 16:05:55,189 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:05:55,191 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:05:55,194 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:05:55,212 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:simple
2018-12-17 16:05:55,216 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:05:55,216 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: simple(String)
2018-12-17 16:05:55,220 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:05:55,222 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:05:55,223 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: simple(String), 10(Integer)
2018-12-17 16:05:55,237 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 3
2018-12-17 16:07:21,664 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:07:21,666 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:07:21,668 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:07:21,670 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:07:21,671 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: banish(String)
2018-12-17 16:07:21,679 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:07:21,691 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:banish
2018-12-17 16:07:21,693 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:07:21,693 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: banish(String)
2018-12-17 16:07:21,698 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:07:21,698 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:07:21,699 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: banish(String), 10(Integer)
2018-12-17 16:07:21,707 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 2
2018-12-17 16:07:22,168 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:07:22,169 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:07:22,171 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:07:22,175 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:07:22,175 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: preside(String)
2018-12-17 16:07:22,184 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:07:22,206 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:preside
2018-12-17 16:07:22,209 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:07:22,209 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: preside(String)
2018-12-17 16:07:22,226 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:07:22,227 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:07:22,228 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: preside(String), 10(Integer)
2018-12-17 16:07:22,246 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:07:22,533 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:07:22,535 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:07:22,550 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:07:22,551 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:07:22,551 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: test(String)
2018-12-17 16:07:22,559 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:07:22,567 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:test
2018-12-17 16:07:22,570 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:07:22,570 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: test(String)
2018-12-17 16:07:22,573 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:07:22,574 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:07:22,574 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: test(String), 10(Integer)
2018-12-17 16:07:22,579 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:07:23,711 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:07:23,712 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:07:24,083 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:07:24,084 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:07:24,085 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: test(String)
2018-12-17 16:07:24,123 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:07:24,323 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:07:24,324 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:07:24,396 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:07:24,398 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:07:24,399 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: neural(String)
2018-12-17 16:07:24,411 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:07:24,440 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:neural
2018-12-17 16:07:24,442 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:07:24,443 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: neural(String)
2018-12-17 16:07:24,447 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:07:24,448 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:07:24,449 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: neural(String), 10(Integer)
2018-12-17 16:07:24,458 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:07:28,549 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:07:28,550 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:07:28,554 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:07:28,569 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:vincible
2018-12-17 16:07:28,570 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:07:28,571 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: vincible(String)
2018-12-17 16:07:28,573 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:07:28,575 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:07:28,576 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: vincible(String), 10(Integer)
2018-12-17 16:07:28,589 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 3
2018-12-17 16:07:34,944 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:07:34,944 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:07:34,946 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:07:34,947 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:07:34,947 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: stable(String)
2018-12-17 16:07:34,957 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:07:34,965 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:stable
2018-12-17 16:07:34,966 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:07:34,967 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: stable(String)
2018-12-17 16:07:34,970 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:07:34,971 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:07:34,972 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: stable(String), 10(Integer)
2018-12-17 16:07:34,978 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:07:46,792 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:07:46,797 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:07:46,799 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:07:46,801 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:07:46,802 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: still(String)
2018-12-17 16:07:46,812 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:07:46,842 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:still
2018-12-17 16:07:46,846 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:07:46,847 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: still(String)
2018-12-17 16:07:46,852 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:07:46,857 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:07:46,858 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: still(String), 10(Integer)
2018-12-17 16:07:46,863 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:07:47,861 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:07:47,861 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:07:47,863 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:07:47,865 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:07:47,865 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: contrast(String)
2018-12-17 16:07:47,875 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:07:47,882 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:contrast
2018-12-17 16:07:47,884 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:07:47,884 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: contrast(String)
2018-12-17 16:07:47,887 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:07:47,888 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:07:47,889 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: contrast(String), 10(Integer)
2018-12-17 16:07:47,898 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-12-17 16:07:48,091 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:07:48,092 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:07:48,096 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:07:48,097 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:07:48,098 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: technology(String)
2018-12-17 16:07:48,109 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:07:48,120 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:technology
2018-12-17 16:07:48,122 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:07:48,123 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: technology(String)
2018-12-17 16:07:48,126 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:07:48,126 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:07:48,127 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: technology(String), 10(Integer)
2018-12-17 16:07:48,130 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:07:48,377 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:07:48,378 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:07:48,398 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:07:48,399 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:07:48,400 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: move(String)
2018-12-17 16:07:48,417 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:07:48,660 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:07:48,661 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:07:48,663 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:07:48,664 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:07:48,665 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: establish(String)
2018-12-17 16:07:48,676 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:07:48,685 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:establish
2018-12-17 16:07:48,687 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:07:48,687 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: establish(String)
2018-12-17 16:07:48,690 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:07:48,691 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:07:48,694 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: establish(String), 10(Integer)
2018-12-17 16:07:48,701 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:07:49,830 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:07:49,831 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:07:49,832 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:07:49,833 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:07:49,833 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: reside(String)
2018-12-17 16:07:49,841 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:07:49,847 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:reside
2018-12-17 16:07:49,849 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:07:49,850 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: reside(String)
2018-12-17 16:07:49,854 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:07:49,855 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:07:49,855 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: reside(String), 10(Integer)
2018-12-17 16:07:49,863 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:07:58,708 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:07:58,709 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:07:58,711 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:07:58,713 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:07:58,714 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: test(String)
2018-12-17 16:07:58,733 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:07:58,748 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:test
2018-12-17 16:07:58,749 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:07:58,750 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: test(String)
2018-12-17 16:07:58,751 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:07:58,752 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:07:58,753 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: test(String), 10(Integer)
2018-12-17 16:07:58,756 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:08:13,741 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:08:13,743 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:08:13,745 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:08:13,758 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:standard
2018-12-17 16:08:13,760 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:08:13,760 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: standard(String)
2018-12-17 16:08:13,765 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:08:13,765 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:08:13,766 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: standard(String), 10(Integer)
2018-12-17 16:08:13,774 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:08:20,787 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:08:20,788 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:08:20,791 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:08:20,793 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:08:20,797 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: subside(String)
2018-12-17 16:08:20,809 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:08:20,873 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:subside
2018-12-17 16:08:20,875 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:08:20,876 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: subside(String)
2018-12-17 16:08:20,883 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:08:20,884 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:08:20,884 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: subside(String), 10(Integer)
2018-12-17 16:08:20,890 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:09:17,731 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:09:17,731 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:09:17,732 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:09:17,733 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:09:17,734 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: intelligent(String)
2018-12-17 16:09:17,742 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:09:17,814 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:intelligent
2018-12-17 16:09:17,815 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:09:17,815 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: intelligent(String)
2018-12-17 16:09:17,818 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:09:17,819 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:09:17,819 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: intelligent(String), 10(Integer)
2018-12-17 16:09:17,827 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:09:49,274 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:09:49,275 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:09:49,276 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:09:49,277 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:09:49,278 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: direct(String)
2018-12-17 16:09:49,289 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:09:49,345 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:direct
2018-12-17 16:09:49,347 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:09:49,348 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: direct(String)
2018-12-17 16:09:49,351 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:09:49,352 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:09:49,353 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: direct(String), 10(Integer)
2018-12-17 16:09:49,357 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:09:50,083 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:09:50,084 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:09:50,085 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:09:50,086 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:09:50,087 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: string(String)
2018-12-17 16:09:50,096 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:09:50,101 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:string
2018-12-17 16:09:50,103 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:09:50,104 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: string(String)
2018-12-17 16:09:50,109 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:09:50,110 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:09:50,111 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: string(String), 10(Integer)
2018-12-17 16:09:50,120 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:10:05,071 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:10:05,072 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:10:05,074 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:10:05,075 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:10:05,075 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: energy(String)
2018-12-17 16:10:05,085 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:10:05,092 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:energy
2018-12-17 16:10:05,094 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:10:05,094 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: energy(String)
2018-12-17 16:10:05,097 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:10:05,098 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:10:05,098 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: energy(String), 10(Integer)
2018-12-17 16:10:05,108 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:10:15,411 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:10:15,413 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:10:15,416 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:10:15,418 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:10:15,419 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: perform(String)
2018-12-17 16:10:15,435 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:10:15,452 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:perform
2018-12-17 16:10:15,458 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:10:15,459 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: perform(String)
2018-12-17 16:10:15,464 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:10:15,465 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:10:15,465 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: perform(String), 10(Integer)
2018-12-17 16:10:15,469 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:10:18,052 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:10:18,053 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:10:18,057 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:10:18,059 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:10:18,060 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: medieval(String)
2018-12-17 16:10:18,076 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:10:18,085 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:medieval
2018-12-17 16:10:18,087 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:10:18,087 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: medieval(String)
2018-12-17 16:10:18,090 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:10:18,090 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:10:18,091 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: medieval(String), 10(Integer)
2018-12-17 16:10:18,123 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 3
2018-12-17 16:10:20,580 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:10:20,581 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:10:20,598 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:10:20,601 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:10:20,602 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: multiply(String)
2018-12-17 16:10:20,615 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:10:20,622 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:multiply
2018-12-17 16:10:20,623 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:10:20,624 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: multiply(String)
2018-12-17 16:10:20,626 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:10:20,626 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:10:20,627 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: multiply(String), 10(Integer)
2018-12-17 16:10:20,635 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-12-17 16:10:27,907 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:10:27,908 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:10:27,909 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:10:27,910 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:10:27,910 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: cover(String)
2018-12-17 16:10:27,916 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:10:27,926 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:cover
2018-12-17 16:10:27,927 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:10:27,928 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: cover(String)
2018-12-17 16:10:27,930 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:10:27,931 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:10:27,932 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: cover(String), 10(Integer)
2018-12-17 16:10:27,938 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:10:31,409 INFO (WordController.java:88)- page method: pn:1,word:
2018-12-17 16:10:31,411 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word 
2018-12-17 16:10:31,412 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:10:31,417 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:10:31,418 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word LIMIT ? 
2018-12-17 16:10:31,419 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 10(Integer)
2018-12-17 16:10:31,421 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:10:35,758 INFO (WordController.java:88)- page method: pn:1,word:multiply
2018-12-17 16:10:35,766 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (word LIKE ?) 
2018-12-17 16:10:35,767 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: %multiply%(String)
2018-12-17 16:10:35,771 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:10:35,772 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word like ? ) LIMIT ? 
2018-12-17 16:10:35,773 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: %multiply%(String), 10(Integer)
2018-12-17 16:10:35,783 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 2
2018-12-17 16:10:38,757 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word where id = ? 
2018-12-17 16:10:38,761 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 2107(Integer)
2018-12-17 16:10:38,763 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:13:09,851 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:13:09,852 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:13:09,855 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:13:09,856 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:13:09,857 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: pressure(String)
2018-12-17 16:13:09,867 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:13:09,880 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:pressure
2018-12-17 16:13:09,882 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:13:09,883 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: pressure(String)
2018-12-17 16:13:09,915 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:13:09,916 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:13:09,917 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: pressure(String), 10(Integer)
2018-12-17 16:13:09,921 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:13:11,767 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:13:11,768 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:13:11,770 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:13:11,772 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:13:11,773 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: format(String)
2018-12-17 16:13:11,793 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:13:11,802 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:format
2018-12-17 16:13:11,804 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:13:11,805 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: format(String)
2018-12-17 16:13:11,808 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:13:11,808 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:13:11,809 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: format(String), 10(Integer)
2018-12-17 16:13:11,819 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-12-17 16:13:13,545 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:13:13,547 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:13:13,550 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:13:13,578 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:motion
2018-12-17 16:13:13,583 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:13:13,584 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: motion(String)
2018-12-17 16:13:13,590 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:13:13,591 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:13:13,592 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: motion(String), 10(Integer)
2018-12-17 16:13:13,606 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 7
2018-12-17 16:13:14,731 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:13:14,732 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:13:14,755 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:13:14,757 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:13:14,758 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: form(String)
2018-12-17 16:13:14,778 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:13:14,790 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:form
2018-12-17 16:13:14,793 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:13:14,795 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: form(String)
2018-12-17 16:13:14,799 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:13:14,799 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:13:14,800 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: form(String), 10(Integer)
2018-12-17 16:13:14,801 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:13:16,130 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:13:16,131 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:13:16,135 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:13:16,137 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:13:16,139 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: technology(String)
2018-12-17 16:13:16,154 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:13:16,162 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:technology
2018-12-17 16:13:16,163 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:13:16,164 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: technology(String)
2018-12-17 16:13:16,168 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:13:16,168 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:13:16,169 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: technology(String), 10(Integer)
2018-12-17 16:13:16,173 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:13:17,445 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:13:17,446 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:13:17,450 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:13:17,462 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:comply
2018-12-17 16:13:17,468 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:13:17,469 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: comply(String)
2018-12-17 16:13:17,471 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:13:17,472 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:13:17,473 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: comply(String), 10(Integer)
2018-12-17 16:13:17,480 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-12-17 16:13:18,565 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:13:18,566 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:13:18,568 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:13:18,569 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:13:18,569 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: bar(String)
2018-12-17 16:13:18,576 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:13:18,581 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:bar
2018-12-17 16:13:18,583 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:13:18,583 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: bar(String)
2018-12-17 16:13:18,587 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:13:18,587 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:13:18,588 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: bar(String), 10(Integer)
2018-12-17 16:13:18,590 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:13:19,618 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:13:19,619 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:13:19,622 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:13:19,624 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:13:19,625 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: negligence(String)
2018-12-17 16:13:19,640 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:13:19,657 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:negligence
2018-12-17 16:13:19,658 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:13:19,659 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: negligence(String)
2018-12-17 16:13:19,661 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:13:19,662 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:13:19,662 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: negligence(String), 10(Integer)
2018-12-17 16:13:19,675 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 5
2018-12-17 16:13:20,773 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:13:20,774 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:13:20,777 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:13:20,778 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:13:20,779 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: cover(String)
2018-12-17 16:13:20,798 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:13:20,805 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:cover
2018-12-17 16:13:20,807 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:13:20,808 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: cover(String)
2018-12-17 16:13:20,811 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:13:20,811 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:13:20,812 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: cover(String), 10(Integer)
2018-12-17 16:13:20,817 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:13:21,956 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:13:21,958 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:13:21,965 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:13:21,975 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:homeopath
2018-12-17 16:13:21,977 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:13:21,978 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: homeopath(String)
2018-12-17 16:13:21,980 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:13:21,981 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:13:21,981 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: homeopath(String), 10(Integer)
2018-12-17 16:13:21,992 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 3
2018-12-17 16:13:23,019 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:13:23,020 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:13:23,024 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:13:27,034 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:13:27,035 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:13:27,038 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:13:27,040 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:13:27,041 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: possess(String)
2018-12-17 16:13:27,061 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:13:27,072 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:possess
2018-12-17 16:13:27,075 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:13:27,075 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: possess(String)
2018-12-17 16:13:27,079 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:13:27,080 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:13:27,088 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: possess(String), 10(Integer)
2018-12-17 16:13:27,107 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:16:51,625 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:16:51,626 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:16:51,630 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:16:51,633 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:16:51,634 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: possess(String)
2018-12-17 16:16:51,649 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:16:51,659 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:possess
2018-12-17 16:16:51,662 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:16:51,663 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: possess(String)
2018-12-17 16:16:51,667 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:16:51,668 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:16:51,669 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: possess(String), 10(Integer)
2018-12-17 16:16:51,681 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:17:30,117 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:17:30,118 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:17:30,121 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:17:30,123 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:17:30,124 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: describe(String)
2018-12-17 16:17:30,141 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:17:30,153 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:describe
2018-12-17 16:17:30,155 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:17:30,156 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: describe(String)
2018-12-17 16:17:30,159 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:17:30,159 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:17:30,160 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: describe(String), 10(Integer)
2018-12-17 16:17:30,162 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:18:00,183 INFO (StartupInfoLogger.java:50)- Starting EnglishApplication on seari-PC with PID 4544 (started by seari in E:\work\english\词汇\english)
2018-12-17 16:18:00,190 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.0.RELEASE, Spring v5.1.2.RELEASE
2018-12-17 16:18:00,192 INFO (SpringApplication.java:675)- No active profile set, falling back to default profiles: default
2018-12-17 16:18:04,131 INFO (StartupInfoLogger.java:59)- Started EnglishApplication in 4.942 seconds (JVM running for 6.782)
2018-12-17 16:18:07,799 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:18:07,849 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:18:07,979 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:18:08,052 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:18:08,053 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: primipara(String)
2018-12-17 16:18:08,073 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:18:08,149 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:primipara
2018-12-17 16:18:08,207 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:18:08,208 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: primipara(String)
2018-12-17 16:18:08,232 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:18:08,238 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:18:08,239 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: primipara(String), 10(Integer)
2018-12-17 16:18:08,269 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 3
2018-12-17 16:19:01,825 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:19:01,827 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:19:01,836 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:19:01,845 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:complement
2018-12-17 16:19:01,848 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:19:01,851 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: complement(String)
2018-12-17 16:19:01,856 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:19:01,857 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:19:01,858 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: complement(String), 10(Integer)
2018-12-17 16:19:01,871 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 3
2018-12-17 16:19:08,230 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:19:08,232 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:19:08,237 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:19:08,240 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:19:08,242 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: homeopath(String)
2018-12-17 16:19:08,259 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:19:08,270 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:homeopath
2018-12-17 16:19:08,275 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:19:08,276 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: homeopath(String)
2018-12-17 16:19:08,279 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:19:08,280 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:19:08,281 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: homeopath(String), 10(Integer)
2018-12-17 16:19:08,290 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 3
2018-12-17 16:20:44,638 INFO (StartupInfoLogger.java:50)- Starting EnglishApplication on seari-PC with PID 5424 (started by seari in E:\work\english\词汇\english)
2018-12-17 16:20:44,642 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.0.RELEASE, Spring v5.1.2.RELEASE
2018-12-17 16:20:44,644 INFO (SpringApplication.java:675)- No active profile set, falling back to default profiles: default
2018-12-17 16:20:47,552 INFO (StartupInfoLogger.java:59)- Started EnglishApplication in 3.9 seconds (JVM running for 5.616)
2018-12-17 16:20:52,871 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:20:52,896 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:20:52,948 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:20:52,987 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:20:52,988 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: test(String)
2018-12-17 16:20:52,995 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:20:53,129 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:test
2018-12-17 16:20:53,202 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:20:53,204 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: test(String)
2018-12-17 16:20:53,209 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:20:53,215 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:20:53,216 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: test(String), 10(Integer)
2018-12-17 16:20:53,226 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:21:54,948 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:21:54,949 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:21:54,951 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:21:54,953 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:21:54,954 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: sedate(String)
2018-12-17 16:21:54,996 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:21:55,016 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:sedate
2018-12-17 16:21:55,020 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:21:55,022 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: sedate(String)
2018-12-17 16:21:55,027 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:21:55,028 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:21:55,030 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: sedate(String), 10(Integer)
2018-12-17 16:21:55,047 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-12-17 16:22:27,281 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:22:27,282 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:22:27,284 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:22:27,286 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:22:27,287 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: ergonomic(String)
2018-12-17 16:22:27,298 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:22:27,320 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:ergonomic
2018-12-17 16:22:27,325 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:22:27,326 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: ergonomic(String)
2018-12-17 16:22:27,330 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:22:27,332 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:22:27,335 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: ergonomic(String), 10(Integer)
2018-12-17 16:22:27,346 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 3
2018-12-17 16:23:00,509 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:23:00,510 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:23:00,513 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:23:00,514 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:23:00,515 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: price(String)
2018-12-17 16:23:00,522 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:23:00,533 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:price
2018-12-17 16:23:00,540 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:23:00,541 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: price(String)
2018-12-17 16:23:00,544 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:23:00,546 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:23:00,548 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: price(String), 10(Integer)
2018-12-17 16:23:00,560 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:23:01,400 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:23:01,402 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:23:01,409 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:23:01,412 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:23:01,414 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: cover(String)
2018-12-17 16:23:01,424 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:23:01,434 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:cover
2018-12-17 16:23:01,439 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:23:01,440 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: cover(String)
2018-12-17 16:23:01,444 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:23:01,445 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:23:01,446 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: cover(String), 10(Integer)
2018-12-17 16:23:01,452 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:26:38,835 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:26:38,836 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:26:38,838 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:26:38,841 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:26:38,842 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: rest(String)
2018-12-17 16:26:38,853 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:26:38,867 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:rest
2018-12-17 16:26:38,872 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:26:38,874 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: rest(String)
2018-12-17 16:26:38,877 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:26:38,878 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:26:38,878 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: rest(String), 10(Integer)
2018-12-17 16:26:38,882 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:33:57,752 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:33:57,753 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:33:57,764 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:33:57,804 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:appreciate
2018-12-17 16:33:57,806 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:33:57,807 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: appreciate(String)
2018-12-17 16:33:57,817 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:33:57,819 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:33:57,820 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: appreciate(String), 10(Integer)
2018-12-17 16:33:57,832 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:34:20,012 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:34:20,013 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:34:20,018 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:34:20,035 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:complicate
2018-12-17 16:34:20,047 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:34:20,048 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: complicate(String)
2018-12-17 16:34:20,052 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:34:20,057 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:34:20,058 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: complicate(String), 10(Integer)
2018-12-17 16:34:20,079 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 7
2018-12-17 16:34:58,865 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:34:58,868 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:34:58,875 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:34:58,877 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:34:58,878 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: oust(String)
2018-12-17 16:34:58,893 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:34:58,906 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:oust
2018-12-17 16:34:58,911 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:34:58,912 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: oust(String)
2018-12-17 16:34:58,916 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:34:58,917 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:34:58,918 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: oust(String), 10(Integer)
2018-12-17 16:34:58,931 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 2
2018-12-17 16:36:55,659 INFO (WordController.java:88)- page method: pn:1,word:
2018-12-17 16:36:55,662 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word 
2018-12-17 16:36:55,663 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:36:55,667 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:36:55,668 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word LIMIT ? 
2018-12-17 16:36:55,669 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 10(Integer)
2018-12-17 16:36:55,671 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:36:56,761 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:36:56,762 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:36:56,764 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:36:56,766 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:36:56,767 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: promote(String)
2018-12-17 16:36:56,780 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:36:56,806 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:promote
2018-12-17 16:36:56,809 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:36:56,810 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: promote(String)
2018-12-17 16:36:56,817 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:36:56,818 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:36:56,818 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: promote(String), 10(Integer)
2018-12-17 16:36:56,829 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 7
2018-12-17 16:37:03,924 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:37:03,925 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:37:03,928 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:37:03,931 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:37:03,932 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: epistemic(String)
2018-12-17 16:37:03,947 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:37:03,958 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:epistemic
2018-12-17 16:37:03,961 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:37:03,961 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: epistemic(String)
2018-12-17 16:37:03,966 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:37:03,968 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:37:03,969 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: epistemic(String), 10(Integer)
2018-12-17 16:37:03,978 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 3
2018-12-17 16:37:56,978 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:37:56,980 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:37:56,981 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:37:56,983 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:37:56,984 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: intelligent(String)
2018-12-17 16:37:56,995 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:37:57,037 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:intelligent
2018-12-17 16:37:57,042 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:37:57,043 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: intelligent(String)
2018-12-17 16:37:57,046 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:37:57,047 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:37:57,048 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: intelligent(String), 10(Integer)
2018-12-17 16:37:57,058 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:37:57,498 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:37:57,499 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:37:57,540 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:37:57,542 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:37:57,543 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: stand(String)
2018-12-17 16:37:57,552 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:37:57,563 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:stand
2018-12-17 16:37:57,565 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:37:57,565 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: stand(String)
2018-12-17 16:37:57,569 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:37:57,570 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:37:57,570 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: stand(String), 10(Integer)
2018-12-17 16:37:57,576 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:38:00,847 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:38:00,848 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:38:00,852 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:38:00,855 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:38:00,855 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: circumstance(String)
2018-12-17 16:38:00,865 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:38:00,978 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:38:00,979 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:38:01,015 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:38:01,016 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:38:01,016 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: trivia(String)
2018-12-17 16:38:01,025 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:38:01,041 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:trivia
2018-12-17 16:38:01,043 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:38:01,044 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: trivia(String)
2018-12-17 16:38:01,047 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:38:01,049 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:38:01,051 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: trivia(String), 10(Integer)
2018-12-17 16:38:01,062 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 7
2018-12-17 16:38:01,163 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:38:01,164 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:38:01,166 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:38:01,167 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:38:01,168 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: test(String)
2018-12-17 16:38:01,177 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:38:01,185 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:test
2018-12-17 16:38:01,187 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:38:01,189 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: test(String)
2018-12-17 16:38:01,200 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:38:01,201 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:38:01,203 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: test(String), 10(Integer)
2018-12-17 16:38:01,212 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:38:01,336 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:38:01,337 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:38:01,338 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:38:01,345 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:movie
2018-12-17 16:38:01,347 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:38:01,347 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: movie(String)
2018-12-17 16:38:01,351 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:38:01,352 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:38:01,353 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: movie(String), 10(Integer)
2018-12-17 16:38:01,358 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:38:04,796 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:38:04,798 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:38:04,827 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:38:04,829 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:38:04,830 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: sympathy(String)
2018-12-17 16:38:04,847 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:38:04,863 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:sympathy
2018-12-17 16:38:04,876 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:38:04,876 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: sympathy(String)
2018-12-17 16:38:04,878 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:38:04,879 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:38:04,879 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: sympathy(String), 10(Integer)
2018-12-17 16:38:04,887 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 7
2018-12-17 16:38:27,062 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:38:27,062 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:38:27,064 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:38:27,065 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:38:27,066 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: constitute(String)
2018-12-17 16:38:27,075 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:38:27,085 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:constitute
2018-12-17 16:38:27,089 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:38:27,089 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: constitute(String)
2018-12-17 16:38:27,093 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:38:27,094 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:38:27,095 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: constitute(String), 10(Integer)
2018-12-17 16:38:27,102 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:39:16,889 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:39:16,890 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:39:16,893 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:39:16,895 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:39:16,896 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: passion(String)
2018-12-17 16:39:16,906 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:39:16,916 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:passion
2018-12-17 16:39:16,918 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:39:16,919 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: passion(String)
2018-12-17 16:39:16,922 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:39:16,923 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:39:16,924 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: passion(String), 10(Integer)
2018-12-17 16:39:16,934 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:39:17,482 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:39:17,485 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:39:17,495 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:39:17,497 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:39:17,497 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: constrict(String)
2018-12-17 16:39:17,513 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:39:17,543 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:constrict
2018-12-17 16:39:17,545 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:39:17,546 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: constrict(String)
2018-12-17 16:39:17,549 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:39:17,550 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:39:17,551 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: constrict(String), 10(Integer)
2018-12-17 16:39:17,561 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 7
2018-12-17 16:39:26,431 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:39:26,432 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:39:26,434 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:39:26,436 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:39:26,437 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: pathology(String)
2018-12-17 16:39:26,447 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:39:26,453 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:pathology
2018-12-17 16:39:26,459 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:39:26,460 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: pathology(String)
2018-12-17 16:39:26,463 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:39:26,465 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:39:26,465 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: pathology(String), 10(Integer)
2018-12-17 16:39:26,475 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:39:27,049 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:39:27,050 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:39:27,054 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:39:27,057 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:39:27,058 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: discover(String)
2018-12-17 16:39:27,067 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:39:27,074 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:discover
2018-12-17 16:39:27,077 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:39:27,077 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: discover(String)
2018-12-17 16:39:27,082 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:39:27,084 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:39:27,085 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: discover(String), 10(Integer)
2018-12-17 16:39:27,091 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:39:45,223 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:39:45,224 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:39:45,233 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:39:45,239 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:39:45,240 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: organic(String)
2018-12-17 16:39:45,253 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:39:45,267 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:organic
2018-12-17 16:39:45,270 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:39:45,270 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: organic(String)
2018-12-17 16:39:45,275 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:39:45,276 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:39:45,277 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: organic(String), 10(Integer)
2018-12-17 16:39:45,289 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:40:41,648 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:40:41,648 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:40:41,650 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:40:41,661 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:neglect
2018-12-17 16:40:41,663 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:40:41,663 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: neglect(String)
2018-12-17 16:40:41,665 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:40:41,665 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:40:41,666 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: neglect(String), 10(Integer)
2018-12-17 16:40:41,677 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-12-17 16:41:25,269 INFO (StartupInfoLogger.java:50)- Starting EnglishApplication on seari-PC with PID 9328 (started by seari in E:\work\english\词汇\english)
2018-12-17 16:41:25,275 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.0.RELEASE, Spring v5.1.2.RELEASE
2018-12-17 16:41:25,279 INFO (SpringApplication.java:675)- No active profile set, falling back to default profiles: default
2018-12-17 16:41:29,294 INFO (StartupInfoLogger.java:59)- Started EnglishApplication in 5.343 seconds (JVM running for 7.066)
2018-12-17 16:41:33,169 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:41:33,204 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:41:33,245 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:41:33,321 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:41:33,322 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: suppress(String)
2018-12-17 16:41:33,333 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:41:33,551 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:suppress
2018-12-17 16:41:33,626 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:41:33,627 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: suppress(String)
2018-12-17 16:41:33,631 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:41:33,637 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:41:33,638 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: suppress(String), 10(Integer)
2018-12-17 16:41:33,652 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 8
2018-12-17 16:41:39,608 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:41:39,609 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:41:39,613 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:41:39,616 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( word = ? ) 
2018-12-17 16:41:39,617 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: motive(String)
2018-12-17 16:41:39,626 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:41:39,651 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:motive
2018-12-17 16:41:39,654 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:41:39,657 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: motive(String)
2018-12-17 16:41:39,661 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:41:39,663 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:41:39,664 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: motive(String), 10(Integer)
2018-12-17 16:41:39,677 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:43:01,336 INFO (StartupInfoLogger.java:50)- Starting EnglishApplication on seari-PC with PID 10160 (started by seari in E:\work\english\词汇\english)
2018-12-17 16:43:01,341 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.0.RELEASE, Spring v5.1.2.RELEASE
2018-12-17 16:43:01,345 INFO (SpringApplication.java:675)- No active profile set, falling back to default profiles: default
2018-12-17 16:43:04,672 INFO (StartupInfoLogger.java:59)- Started EnglishApplication in 4.747 seconds (JVM running for 7.142)
2018-12-17 16:43:20,325 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:43:20,342 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:43:20,413 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:43:20,479 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 16:43:20,481 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: duplicate(String)
2018-12-17 16:43:20,491 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:43:20,619 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:duplicate
2018-12-17 16:43:20,678 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:43:20,679 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: duplicate(String)
2018-12-17 16:43:20,684 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:43:20,688 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:43:20,689 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: duplicate(String), 10(Integer)
2018-12-17 16:43:20,698 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 7
2018-12-17 16:43:33,345 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:43:33,348 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:43:33,353 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:43:33,355 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 16:43:33,357 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: structure(String)
2018-12-17 16:43:33,373 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:43:33,443 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:structure
2018-12-17 16:43:33,445 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:43:33,446 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: structure(String)
2018-12-17 16:43:33,449 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:43:33,450 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:43:33,450 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: structure(String), 10(Integer)
2018-12-17 16:43:33,457 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:43:45,601 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:43:45,603 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:43:45,608 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:44:01,625 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:44:01,626 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:44:01,628 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:44:01,630 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 16:44:01,631 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: compress(String)
2018-12-17 16:44:01,643 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:44:01,658 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:compress
2018-12-17 16:44:01,661 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:44:01,662 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: compress(String)
2018-12-17 16:44:01,671 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:44:01,672 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:44:01,674 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: compress(String), 10(Integer)
2018-12-17 16:44:01,689 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:44:07,819 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:44:07,821 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:44:07,825 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:44:07,829 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 16:44:07,830 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: system(String)
2018-12-17 16:44:07,846 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:44:07,855 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:system
2018-12-17 16:44:07,858 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:44:07,860 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: system(String)
2018-12-17 16:44:07,865 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:44:07,868 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:44:07,869 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: system(String), 10(Integer)
2018-12-17 16:44:07,875 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:44:12,337 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:44:12,339 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:44:12,342 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:44:12,345 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 16:44:12,347 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: intelligent(String)
2018-12-17 16:44:12,366 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:44:12,382 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:intelligent
2018-12-17 16:44:12,386 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:44:12,387 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: intelligent(String)
2018-12-17 16:44:12,391 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:44:12,392 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:44:12,393 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: intelligent(String), 10(Integer)
2018-12-17 16:44:12,407 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:44:15,606 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:44:15,607 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:44:15,613 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:44:15,618 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 16:44:15,623 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: deconstruct(String)
2018-12-17 16:44:15,641 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:44:15,650 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:deconstruct
2018-12-17 16:44:15,653 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:44:15,654 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: deconstruct(String)
2018-12-17 16:44:15,659 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:44:15,660 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:44:15,661 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: deconstruct(String), 10(Integer)
2018-12-17 16:44:15,665 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:44:24,558 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:44:24,558 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:44:24,560 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:44:24,561 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 16:44:24,561 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: deconstruct(String)
2018-12-17 16:44:24,569 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:44:24,578 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:deconstruct
2018-12-17 16:44:24,582 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:44:24,583 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: deconstruct(String)
2018-12-17 16:44:24,586 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:44:24,588 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:44:24,589 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: deconstruct(String), 10(Integer)
2018-12-17 16:44:24,593 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:49:30,963 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word in ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ) 
2018-12-17 16:49:30,964 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: structure(String), structured(String), structural(String), structurally(String), structuralist(String), substructure(String), superstructure(String), structuring(String), structuralism(String), unstructured(String), semi-structured(String), poststructural(String), post-structuralist(String), well-structured(String), non-structural(String), fine-structure(String), microstructure(String), microstructural(String), macro-structure(String), nanostructure(String), nanostructured(String), social-structural(String), instruct(String), instructor(String), instruction(String), instructive(String), instructional(String), instructionally(String), self-instruction(String), self-instructional(String), infrastructure(String), infrastructural(String), construct(String), construction(String), constructionist(String), constructor(String), constructive(String), constructivist(String), constructively(String), constructivism(String), construction-paper(String), constructed-response(String), well-constructed(String), reconstruction(String), reconstructionist(String), reconstructed(String), reconstructive(String), unreconstructed(String), deconstruct(String), deconstruction(String), deconstructive(String), deconstructed(String), deconstructionism(String), restructure(String), restructuring(String), destruct(String), destructor(String), destruction(String), destructive(String), destructively(String), destructiveness(String), destructible(String), indestructible(String), non-destructive(String), self-destruct(String), self-destructive(String), self-destructing(String), self-destructiveness(String), obstruct(String), obstructed(String), obstruction(String), obstructionism(String), obstructive(String), obstructionist(String), unobstructed(String)
2018-12-17 16:49:30,972 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 0
2018-12-17 16:49:30,975 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: INSERT INTO word(word, chinese,note,coreword,root,sentence,phonetic) values ( ?,?,?, ?,?,?, ? ) , ( ?,?,?, ?,?,?, ? ) , ( ?,?,?, ?,?,?, ? ) 
2018-12-17 16:49:30,976 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: structure(String), n. 建筑物；结构；体系vt. 组织；构成；建造；计划；组织，安排【词频951，7723】【B3M6】【B5M1】【X10M5】(String), 【-struct-建造-ure名词或动词后缀】(String), structure(String), struct(String), null, ['strʌktʃə](String), structured(String), adj. 有结构的；有组织的【词频8539】(String), 【structure+ed形容词后缀】(String), structure(String), struct(String), null, ['strʌktʃəd](String), structural(String), adj. 结构的；建筑的【词频3859】(String), 【structure+al形容词后缀】(String), structure(String), struct(String), null, ['strʌktʃ(ə)r(ə)l](String)
2018-12-17 16:49:31,007 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 3
2018-12-17 16:49:31,009 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: INSERT INTO word(word, chinese,note,coreword,root,sentence,phonetic) values ( ?,?,?, ?,?,?, ? ) , ( ?,?,?, ?,?,?, ? ) , ( ?,?,?, ?,?,?, ? ) 
2018-12-17 16:49:31,010 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: structurally(String), adv. 在结构上【词频16443】(String), 【structual+ly副词后缀】(String), structure(String), struct(String), null, ['strʌktʃərəli](String), structuralist(String), n. 结构学派理论；构造主义者adj. 结构语言学的；结构心理学的【词频26199】(String), 【structural+ist名词后缀，表人，表主义，形容词后缀，类似于最高级】(String), structure(String), struct(String), null, ['strʌktrərəlɪst](String), substructure(String), n. 基础；信念；底部构造【词频39142】(String), 【sub-下+structure(String), structure(String), struct(String), null, ['sʌbstrʌktʃə](String)
2018-12-17 16:49:31,013 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 3
2018-12-17 16:49:31,014 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: INSERT INTO word(word, chinese,note,coreword,root,sentence,phonetic) values ( ?,?,?, ?,?,?, ? ) , ( ?,?,?, ?,?,?, ? ) , ( ?,?,?, ?,?,?, ? ) 
2018-12-17 16:49:31,015 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: superstructure(String), ] n. 上层建筑；上部构造【词频22905】(String), 【super-在上+structure】(String), structure(String), struct(String), null, ['suːpəstrʌktʃə](String), structuring(String), n. 结构化【词频20246】(String), 【structure+ing动名词后缀】(String), structure(String), struct(String), null, ['strʌktʃɚ](String), structuralism(String), n. 结构主义；构造主义【词频31186】(String), 【structural+ism名词后缀，表...主义】(String), structure(String), struct(String), null, ['strʌktʃ(ə)r(ə)lɪz(ə)m](String)
2018-12-17 16:49:31,027 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 3
2018-12-17 16:49:31,029 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: INSERT INTO word(word, chinese,note,coreword,root,sentence,phonetic) values ( ?,?,?, ?,?,?, ? ) , ( ?,?,?, ?,?,?, ? ) , ( ?,?,?, ?,?,?, ? ) 
2018-12-17 16:49:31,030 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: unstructured(String), adj. 无社会组织的；松散的；非正式组成的【词频21108】(String), 【un-否定+structured】(String), structure(String), struct(String), null, [ʌn'strʌktʃəd](String), semi-structured(String), adj. 半结构化的【词频27253】(String), 【semi-半+structure】(String), structure(String), struct(String), null, ['sem(a)i-'strʌktʃəd](String), poststructural(String), n. 解构【词频50543】(String), 【post-后+structural】(String), structure(String), struct(String), null, [pəʊst-'strʌktʃ(ə)r(ə)l](String)
2018-12-17 16:49:31,033 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 3
2018-12-17 16:49:31,035 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: INSERT INTO word(word, chinese,note,coreword,root,sentence,phonetic) values ( ?,?,?, ?,?,?, ? ) , ( ?,?,?, ?,?,?, ? ) , ( ?,?,?, ?,?,?, ? ) 
2018-12-17 16:49:31,036 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: post-structuralist(String), n. 后结构主义【词频37779】(String), 【post-后+structrual+ist名词后缀，表...主义】(String), structure(String), struct(String), null, [pəust'strʌktʃərəlizəm](String), well-structured(String), adj. 结构良好的【词频44136】(String), 【合成词well+...好的】(String), structure(String), struct(String), null, [wel-'strʌktʃəd](String), non-structural(String), adj. 不用于结构上的【词频48141】(String), 【non-否定】(String), structure(String), struct(String), null, [nɔn-'strʌktʃ(ə)r(ə)l](String)
2018-12-17 16:49:31,039 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 3
2018-12-17 16:49:31,041 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: INSERT INTO word(word, chinese,note,coreword,root,sentence,phonetic) values ( ?,?,?, ?,?,?, ? ) , ( ?,?,?, ?,?,?, ? ) , ( ?,?,?, ?,?,?, ? ) 
2018-12-17 16:49:31,042 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: fine-structure(String), adj. 精细结构的【词频52478】(String), 【合成词：fine 好的；优良的；细小的，精美的；健康的；晴朗的】(String), structure(String), struct(String), null, [faɪn-'strʌktʃə](String), microstructure(String), n. 微观结构；[生物] 显微结构【词频34501】(String), 【双词根结构-micro-微小+structure
Microphone=-micro-微小+-phon-声音--小型扩音器+-名词后缀】(String), structure(String), struct(String), null, ['maɪkrə(ʊ),strʌktʃə](String), microstructural(String), adj. 显微结构的【词频56755】(String), 【al形容词后缀】(String), structure(String), struct(String), null, ['maikrəu'strʌktʃərəl](String)
2018-12-17 16:49:31,053 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 3
2018-12-17 16:49:31,054 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: INSERT INTO word(word, chinese,note,coreword,root,sentence,phonetic) values ( ?,?,?, ?,?,?, ? ) , ( ?,?,?, ?,?,?, ? ) , ( ?,?,?, ?,?,?, ? ) 
2018-12-17 16:49:31,055 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: macro-structure(String), n. 宏观结构【词频53141】(String), 【-macro-巨大+structure】(String), structure(String), struct(String), null, ['mækrəu-'strʌktʃə](String), nanostructure(String), n. 纳米结构【词频40817】(String), 【nano纳 毫微】(String), structure(String), struct(String), null, ['nænə(ʊ)strʌktjʊə](String), nanostructured(String), adj. 纳米结构的【词频53671】(String), 【-ed形容词后缀】(String), structure(String), struct(String), null, ['nænə(ʊ)strʌktjʊəd](String)
2018-12-17 16:49:31,058 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 3
2018-12-17 16:49:31,060 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: INSERT INTO word(word, chinese,note,coreword,root,sentence,phonetic) values ( ?,?,?, ?,?,?, ? ) , ( ?,?,?, ?,?,?, ? ) , ( ?,?,?, ?,?,?, ? ) 
2018-12-17 16:49:31,061 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: social-structural(String), adj. 社会结构的;结构的；建筑的【词频59781】(String), 【合成词social社会的，社交的==-soci-伙伴，陪伴+-al形容词后缀
society社会 -soci-+-e-+-ty】(String), structure(String), struct(String), null, ['səʊʃ(ə)l-'strʌktʃ(ə)r(ə)l](String), instruct(String), vt. 指导；通知；命令【词频4278】(String), 【in-强调，使动 +struct建造 使形成，使构建，都是对于一件事物建立规则，然后把这规则衍生下去->构建规程->指导，通知，命令】(String), instruct(String), struct(String), null, [ɪn'strʌkt](String), instructor(String), n. 指导书；教员；指导者【词频3232】(String), 【instruct+or名词后缀，表人】(String), instruct(String), struct(String), null, [ɪn'strʌktə](String)
2018-12-17 16:49:31,063 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 3
2018-12-17 16:49:31,064 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: INSERT INTO word(word, chinese,note,coreword,root,sentence,phonetic) values ( ?,?,?, ?,?,?, ? ) , ( ?,?,?, ?,?,?, ? ) , ( ?,?,?, ?,?,?, ? ) 
2018-12-17 16:49:31,065 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: instruction(String), n.（常作复数）指示；说明【词频1568】【B1M1】(String), 【instruct+ion名词后缀】(String), instruct(String), struct(String), null, [ɪn'strʌkʃ(ə)n](String), instructive(String), adj. 有益的；教育性的【词频11966】(String), 【instruct+ive形容词后缀】(String), instruct(String), struct(String), null, [ɪn'strʌktɪv](String), instructional(String), adj. 教学的；指导的，教育的【词频4362】(String), 【instruction+al形容词后缀】(String), instruct(String), struct(String), null, [ɪn'strʌkʃənəl](String)
2018-12-17 16:49:31,068 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 3
2018-12-17 16:49:31,069 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: INSERT INTO word(word, chinese,note,coreword,root,sentence,phonetic) values ( ?,?,?, ?,?,?, ? ) , ( ?,?,?, ?,?,?, ? ) , ( ?,?,?, ?,?,?, ? ) 
2018-12-17 16:49:31,070 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: instructionally(String), adv. 教学性地，指导性地【词频51716】(String), 【instructional+ly副词后缀】(String), instruct(String), struct(String), null, [ɪn'strʌkʃənəli](String), self-instruction(String), n. 自学；自我指导【词频33160；45508】(String), 【self-自己+instruction】(String), instruct(String), struct(String), null, [[self-ɪn'strʌkʃ(ə)n](String), self-instructional(String), adj. 自学的；适于自学的；用于自学的【词频43216】(String), 【al形容词后缀】(String), instruct(String), struct(String), null, ['selfin'strʌkʃənəl](String)
2018-12-17 16:49:31,073 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 3
2018-12-17 16:49:31,075 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: INSERT INTO word(word, chinese,note,coreword,root,sentence,phonetic) values ( ?,?,?, ?,?,?, ? ) , ( ?,?,?, ?,?,?, ? ) , ( ?,?,?, ?,?,?, ? ) 
2018-12-17 16:49:31,076 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: infrastructure(String), n. 基础设施；公共建设；下部构造【词频3639】(String), 【infra-专有名词才会涉及到的抽象含义的前缀，表示向下+structure】(String), instruct(String), struct(String), null, ['ɪnfrəstrʌktʃə](String), infrastructural(String), adj. 基础结构的；构造基底的【词频32678】(String), 【infrastructure+al形容词后缀】(String), instruct(String), struct(String), null, [,ɪnfrə'strʌktʃərəl](String), construct(String), n. 建造；建设；建筑；造句；解释【词频1419】【B3M6】(String), 【con在一起+construct建造-通过一种形式把一种事物给构建出来->创立，构想】(String), construct(String), struct(String), null, [kən'strʌkt](String)
2018-12-17 16:49:31,078 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 3
2018-12-17 16:49:31,079 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: INSERT INTO word(word, chinese,note,coreword,root,sentence,phonetic) values ( ?,?,?, ?,?,?, ? ) , ( ?,?,?, ?,?,?, ? ) , ( ?,?,?, ?,?,?, ? ) 
2018-12-17 16:49:31,080 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: construction(String), n. 建造；建设；建筑；造句；解释(String), 【construct+ion名词后缀】(String), construct(String), struct(String), null, [kən'strʌkʃ(ə)n](String), constructionist(String), n. 宪法解释者；构成派造型艺术家【词频30409】(String), 【construction+ist名词后缀,表人】(String), construct(String), struct(String), null, [kən'strʌkʃ(ə)nɪst](String), constructor(String), n. 构造函数；构造器；建造者【词频33297】(String), 【construct+or名词后缀，表人或物】(String), construct(String), struct(String), null, [kənˈstrʌktə(r)](String)
2018-12-17 16:49:31,084 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 3
2018-12-17 16:49:31,085 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: INSERT INTO word(word, chinese,note,coreword,root,sentence,phonetic) values ( ?,?,?, ?,?,?, ? ) , ( ?,?,?, ?,?,?, ? ) , ( ?,?,?, ?,?,?, ? ) 
2018-12-17 16:49:31,085 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: constructive(String), adj. 建设性的，有益的；推定的；构造上的【词频7568】【X11M6】(String), 【construct+ive形容词后缀】(String), construct(String), struct(String), null, [kən'strʌktɪv](String), constructivist(String), n. 构成主义者【词频17939，40217】(String), 【constructive+ist名词后缀，表人】(String), construct(String), struct(String), null, [kən'strʌktɪvɪst](String), constructively(String), adv. 建设性地【词频22593】(String), 【constructive+ly副词后缀】(String), construct(String), struct(String), null, [kən'strʌktɪvli](String)
2018-12-17 16:49:31,090 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 3
2018-12-17 16:49:31,091 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: INSERT INTO word(word, chinese,note,coreword,root,sentence,phonetic) values ( ?,?,?, ?,?,?, ? ) , ( ?,?,?, ?,?,?, ? ) , ( ?,?,?, ?,?,?, ? ) 
2018-12-17 16:49:31,092 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: constructivism(String), n. 构成主义；构成派【词频22780】(String), 【constructive+ism名词后缀，表主义】(String), construct(String), struct(String), null, [kən'strʌktɪvɪz(ə)m](String), construction-paper(String), n. 图画用纸；建筑用纸；[纸] 工作用纸【词频51639】(String), 【合成词】(String), construct(String), struct(String), null, [kən'strʌkʃ(ə)n-'peɪpə](String), constructed-response(String), n. 构答反应【词频57527】(String), 【合成词response回应】(String), construct(String), struct(String), null, [kən'strʌkt-rɪ'spɒns](String)
2018-12-17 16:49:31,094 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 3
2018-12-17 16:49:31,095 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: INSERT INTO word(word, chinese,note,coreword,root,sentence,phonetic) values ( ?,?,?, ?,?,?, ? ) , ( ?,?,?, ?,?,?, ? ) , ( ?,?,?, ?,?,?, ? ) 
2018-12-17 16:49:31,096 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: well-constructed(String), adj. 结构合理的；构建完好的【词频38735】(String), 【合成词well+...好的】(String), construct(String), struct(String), null, [wel-kənˈstrʌkt](String), reconstruction(String), n. 再建，重建【词频5263】(String), 【re-再次+construction】(String), construct(String), struct(String), null, [riːkən'strʌkʃn](String), reconstructionist(String), n. （美国内战后）重建主义【词频52365，55165】(String), 【reconstruction+ist名词后缀】(String), construct(String), struct(String), null, [,ri:kən'strʌkʃənist](String)
2018-12-17 16:49:31,099 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 3
2018-12-17 16:49:31,100 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: INSERT INTO word(word, chinese,note,coreword,root,sentence,phonetic) values ( ?,?,?, ?,?,?, ? ) , ( ?,?,?, ?,?,?, ? ) , ( ?,?,?, ?,?,?, ? ) 
2018-12-17 16:49:31,102 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: reconstructed(String), adj. 重建的；改造的【词频22829】(String), 【reconstruct+ed形容词后缀】(String), construct(String), struct(String), null, [,rɪkən'strʌkt](String), reconstructive(String), adj. 重建的；改造的【词频19249】(String), 【reconstruct+ive形容词后缀】(String), construct(String), struct(String), null, [,rikən'strʌktɪv](String), unreconstructed(String), adj. 旧思想的；脑筋转不过来的【词频33837】(String), 【un-否定+reconstructed】(String), construct(String), struct(String), null, [,ʌnriːkən'strʌktɪd](String)
2018-12-17 16:49:31,104 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 3
2018-12-17 16:49:31,105 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: INSERT INTO word(word, chinese,note,coreword,root,sentence,phonetic) values ( ?,?,?, ?,?,?, ? ) , ( ?,?,?, ?,?,?, ? ) , ( ?,?,?, ?,?,?, ? ) 
2018-12-17 16:49:31,106 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: deconstruct(String), vt. 解构；拆析【词频16468】(String), 【de-分+construct构造--分开构造--拆分】(String), deconstruct(String), struct(String), null, ['dikən'strʌkt](String), deconstruction(String), n. 解构；拆析【词频17084】(String), 【deconstruct+ion名词后缀】(String), deconstruct(String), struct(String), null, [,dikən'strʌkʃən](String), deconstructive(String), n. 解构主义【词频30571】(String), 【deconstruct+ive名词后缀】(String), deconstruct(String), struct(String), null, [dɪ'kən'strʌktɪv](String)
2018-12-17 16:49:31,111 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 3
2018-12-17 16:49:31,112 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: INSERT INTO word(word, chinese,note,coreword,root,sentence,phonetic) values ( ?,?,?, ?,?,?, ? ) , ( ?,?,?, ?,?,?, ? ) , ( ?,?,?, ?,?,?, ? ) 
2018-12-17 16:49:31,113 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: deconstructed(String), adj. 没有形式结构的【词频42107】(String), 【deconstruct+ed形容词后缀】(String), deconstruct(String), struct(String), null, [ˌdiːkənˈstrʌktɪd](String), deconstructionism(String), n. 解构主义【词频44598】(String), 【deconstruction+ism名词后缀，表...主义】(String), deconstruct(String), struct(String), null, [,dikən'strʌkʃənɪzm](String), restructure(String), vt. 调整；重建；更改结构【词频7447，8288】(String), 【re-再次--重新+structure】(String), struct(String), struct(String), null, [riː'strʌktʃə](String)
2018-12-17 16:49:31,117 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 3
2018-12-17 16:49:31,118 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: INSERT INTO word(word, chinese,note,coreword,root,sentence,phonetic) values ( ?,?,?, ?,?,?, ? ) , ( ?,?,?, ?,?,?, ? ) , ( ?,?,?, ?,?,?, ? ) 
2018-12-17 16:49:31,118 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: restructuring(String), n. 调整；改组；重建【词频7394】(String), 【restrucure+ing动名词后缀】(String), struct(String), struct(String), null, [riː'strʌktʃərɪŋ](String), destruct(String), vi. 自毁n. 自毁【词频57006】(String), 【de-分离，拆卸+struct--拆掉建造的事物--毁掉】(String), destruct(String), struct(String), null, [dɪ'strʌkt](String), destructor(String), n. 破坏者；垃圾焚毁炉；爆炸装置【词频59846】(String), 【destruct+or名词后缀，表人】(String), destruct(String), struct(String), null, [dɪ'strʌktə](String)
2018-12-17 16:49:31,122 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 3
2018-12-17 16:49:31,124 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: INSERT INTO word(word, chinese,note,coreword,root,sentence,phonetic) values ( ?,?,?, ?,?,?, ? ) , ( ?,?,?, ?,?,?, ? ) , ( ?,?,?, ?,?,?, ? ) 
2018-12-17 16:49:31,125 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: destruction(String), n. 破坏，毁灭；摧毁【词频2701】【B4M6】(String), 【destruct+ion名词后缀】(String), destruct(String), struct(String), null, [dɪ'strʌkʃ(ə)n](String), destructive(String), adj. 破坏的；毁灭性的【词频5892】(String), 【destruct+ive形容词后缀】(String), destruct(String), struct(String), null, [dɪ'strʌktɪv](String), destructively(String), adv. 破坏地；狼狈地【词频40488】(String), 【destructive+ly副词后缀】(String), destruct(String), struct(String), null, [dɪ'strʌktɪvli](String)
2018-12-17 16:49:31,140 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 3
2018-12-17 16:49:31,142 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: INSERT INTO word(word, chinese,note,coreword,root,sentence,phonetic) values ( ?,?,?, ?,?,?, ? ) , ( ?,?,?, ?,?,?, ? ) , ( ?,?,?, ?,?,?, ? ) 
2018-12-17 16:49:31,143 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: destructiveness(String), n. 破坏性；毁灭性；破坏能力【词频30779】(String), 【destructive+ness名词后缀】(String), destruct(String), struct(String), null, [dɪs'trʌktɪvnɪs](String), destructible(String), adj. 可破坏的；易损坏的【词频】(String), 【destruct+ible形容词后缀，表可...的】(String), destruct(String), struct(String), null, [dɪ'strʌktɪb(ə)l](String), indestructible(String), adj. 不可毁灭的，不能破坏的【词频21327】(String), 【in-否定+desctructible】(String), destruct(String), struct(String), null, [ɪndɪ'strʌktɪb(ə)l](String)
2018-12-17 16:49:31,145 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 3
2018-12-17 16:49:31,146 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: INSERT INTO word(word, chinese,note,coreword,root,sentence,phonetic) values ( ?,?,?, ?,?,?, ? ) , ( ?,?,?, ?,?,?, ? ) , ( ?,?,?, ?,?,?, ? ) 
2018-12-17 16:49:31,146 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: non-destructive(String), adj. 无损的；非破坏性【词频31904】(String), 【non-否定+desctructive】(String), destruct(String), struct(String), null, [nɔn-dɪ'strʌktɪv](String), self-destruct(String), vi. 自毁adj 自毁的；自杀的【词频25638】(String), 【self-自己+desctruct】(String), destruct(String), struct(String), null, ['selfdis'trʌkt](String), self-destructive(String), adj. 自毁的；表现自杀欲望的【词频16402】(String), 【-ive形容词后缀】(String), destruct(String), struct(String), null, [,selfdi'strʌktiv](String)
2018-12-17 16:49:31,161 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 3
2018-12-17 16:49:31,162 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: INSERT INTO word(word, chinese,note,coreword,root,sentence,phonetic) values ( ?,?,?, ?,?,?, ? ) , ( ?,?,?, ?,?,?, ? ) , ( ?,?,?, ?,?,?, ? ) 
2018-12-17 16:49:31,164 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: self-destructing(String), adj. 自毁的；自杀的【词频50923】(String), 【-ing形容词后缀】(String), destruct(String), struct(String), null, ['selfdis'trʌktɪŋ](String), self-destructiveness(String), n. 破坏性；毁灭性；破坏能力【词频51496】(String), 【-ness名词后缀】(String), destruct(String), struct(String), null, ['selfdɪs'trʌktɪvnɪs](String), obstruct(String), vt. 妨碍；阻塞；遮断【词频10970】(String), 【ob-反，反方向--struct建造--反向建造--阻拦，妨碍】(String), obstruct(String), struct(String), null, [əb'strʌkt](String)
2018-12-17 16:49:31,166 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 3
2018-12-17 16:49:31,167 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: INSERT INTO word(word, chinese,note,coreword,root,sentence,phonetic) values ( ?,?,?, ?,?,?, ? ) , ( ?,?,?, ?,?,?, ? ) , ( ?,?,?, ?,?,?, ? ) 
2018-12-17 16:49:31,168 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: obstructed(String), adj. 阻塞的；梗阻的，不通的【词频47437】(String), 【obstruct+ed形容词后缀】(String), obstruct(String), struct(String), null, [əb'strʌktid](String), obstruction(String), n. 障碍；阻碍；妨碍【词频9186】(String), 【obstruct+ion名词后缀】(String), obstruct(String), struct(String), null, [əb'strʌkʃ(ə)n](String), obstructionism(String), n. 蓄意阻挠【词频36938】(String), 【obstruction+ism名词后缀】(String), obstruct(String), struct(String), null, [əb'strʌkʃənɪzəm](String)
2018-12-17 16:49:31,172 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 3
2018-12-17 16:49:31,173 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: INSERT INTO word(word, chinese,note,coreword,root,sentence,phonetic) values ( ?,?,?, ?,?,?, ? ) , ( ?,?,?, ?,?,?, ? ) , ( ?,?,?, ?,?,?, ? ) 
2018-12-17 16:49:31,174 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: obstructive(String), adj. 阻碍的；妨碍的n. 妨碍物；障碍物【词频21907】(String), 【obstruct+ive形容词名名词后缀】(String), obstruct(String), struct(String), null, [əb'strʌktɪv](String), obstructionist(String), n. 妨碍者；蓄意阻挠者adj. 阻挠议事的；蓄意阻挠的【词频28584】(String), 【obstruction+ist名词或形容词后缀】(String), obstruct(String), struct(String), null, [əb'strʌkʃənɪst](String), unobstructed(String), adj. 没有障碍的；畅通无阻的【词频22262】(String), 【un-否定+obstruct+ed形容词后缀】(String), obstruct(String), struct(String), null, [ʌnəb'strʌktɪd](String)
2018-12-17 16:49:31,188 DEBUG (BaseJdbcLogger.java:159)- <==    Updates: 3
2018-12-17 16:49:32,416 INFO (WordController.java:88)- page method: pn:1,word:
2018-12-17 16:49:32,422 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word 
2018-12-17 16:49:32,422 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:49:32,424 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:49:32,425 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word LIMIT ? 
2018-12-17 16:49:32,425 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 10(Integer)
2018-12-17 16:49:32,427 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:49:42,105 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:49:42,107 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:49:42,110 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:49:42,125 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 16:49:42,127 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: impress(String)
2018-12-17 16:49:42,139 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:49:42,150 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:impress
2018-12-17 16:49:42,153 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:49:42,154 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: impress(String)
2018-12-17 16:49:42,157 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:49:42,158 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:49:42,159 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: impress(String), 10(Integer)
2018-12-17 16:49:42,163 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:52:47,261 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:52:47,262 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:52:47,265 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:52:47,267 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 16:52:47,268 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: select(String)
2018-12-17 16:52:47,283 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:52:47,296 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:select
2018-12-17 16:52:47,306 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:52:47,306 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: select(String)
2018-12-17 16:52:47,312 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:52:47,313 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:52:47,314 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: select(String), 10(Integer)
2018-12-17 16:52:47,327 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:53:10,023 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:53:10,024 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:53:10,028 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:53:10,033 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 16:53:10,035 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: express(String)
2018-12-17 16:53:10,057 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:53:10,078 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:express
2018-12-17 16:53:10,080 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:53:10,081 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: express(String)
2018-12-17 16:53:10,083 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:53:10,084 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:53:10,084 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: express(String), 10(Integer)
2018-12-17 16:53:10,087 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:53:46,518 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:53:46,520 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:53:46,527 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:53:46,530 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 16:53:46,531 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: select(String)
2018-12-17 16:53:46,548 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:53:46,560 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:select
2018-12-17 16:53:46,562 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:53:46,563 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: select(String)
2018-12-17 16:53:46,565 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:53:46,566 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:53:46,566 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: select(String), 10(Integer)
2018-12-17 16:53:46,575 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:53:57,047 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:53:57,048 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:53:57,051 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:53:57,054 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 16:53:57,055 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: express(String)
2018-12-17 16:53:57,074 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:53:57,097 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:express
2018-12-17 16:53:57,100 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:53:57,101 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: express(String)
2018-12-17 16:53:57,104 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:53:57,105 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:53:57,105 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: express(String), 10(Integer)
2018-12-17 16:53:57,109 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:54:03,398 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:54:03,399 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:54:03,402 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:54:03,405 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 16:54:03,407 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: intelligent(String)
2018-12-17 16:54:03,427 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:54:03,434 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:intelligent
2018-12-17 16:54:03,437 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:54:03,437 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: intelligent(String)
2018-12-17 16:54:03,439 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:54:03,439 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:54:03,440 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: intelligent(String), 10(Integer)
2018-12-17 16:54:03,450 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:56:18,211 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:56:18,212 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:56:18,214 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:56:18,216 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 16:56:18,216 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: compress(String)
2018-12-17 16:56:18,226 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:56:18,248 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:compress
2018-12-17 16:56:18,260 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:56:18,260 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: compress(String)
2018-12-17 16:56:18,263 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:56:18,265 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:56:18,266 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: compress(String), 10(Integer)
2018-12-17 16:56:18,271 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:57:08,025 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:57:08,028 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:57:08,032 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:57:08,051 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:neural
2018-12-17 16:57:08,053 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:57:08,054 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: neural(String)
2018-12-17 16:57:08,058 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:57:08,058 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:57:08,059 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: neural(String), 10(Integer)
2018-12-17 16:57:08,066 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 16:57:58,351 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:57:58,351 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:57:58,354 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:57:58,357 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 16:57:58,357 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: persist(String)
2018-12-17 16:57:58,368 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:57:58,423 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:persist
2018-12-17 16:57:58,431 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:57:58,431 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: persist(String)
2018-12-17 16:57:58,439 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:57:58,442 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:57:58,443 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: persist(String), 10(Integer)
2018-12-17 16:57:58,453 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-12-17 16:58:15,638 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 16:58:15,640 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 16:58:15,642 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:58:15,644 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 16:58:15,645 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: legal(String)
2018-12-17 16:58:15,662 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:58:15,672 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:legal
2018-12-17 16:58:15,674 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 16:58:15,675 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: legal(String)
2018-12-17 16:58:15,680 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 16:58:15,681 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 16:58:15,682 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: legal(String), 10(Integer)
2018-12-17 16:58:15,698 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 17:01:16,495 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:01:16,496 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:01:16,498 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:01:16,499 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 17:01:16,499 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: movie(String)
2018-12-17 17:01:16,508 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:01:16,523 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:movie
2018-12-17 17:01:16,525 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:01:16,526 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: movie(String)
2018-12-17 17:01:16,530 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:01:16,531 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:01:16,532 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: movie(String), 10(Integer)
2018-12-17 17:01:16,543 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 17:01:27,648 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:01:27,649 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:01:27,652 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:01:27,655 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 17:01:27,656 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: employ(String)
2018-12-17 17:01:27,673 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:01:27,681 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:employ
2018-12-17 17:01:27,683 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:01:27,683 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: employ(String)
2018-12-17 17:01:27,686 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:01:27,687 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:01:27,687 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: employ(String), 10(Integer)
2018-12-17 17:01:27,696 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 17:01:53,797 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:01:53,798 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:01:53,802 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:01:53,821 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:stem
2018-12-17 17:01:53,825 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:01:53,826 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: stem(String)
2018-12-17 17:01:53,829 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:01:53,829 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:01:53,830 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: stem(String), 10(Integer)
2018-12-17 17:01:53,837 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 5
2018-12-17 17:02:07,373 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:02:07,374 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:02:07,377 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:02:07,379 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 17:02:07,380 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: move(String)
2018-12-17 17:02:07,394 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:02:07,402 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:move
2018-12-17 17:02:07,403 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:02:07,404 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: move(String)
2018-12-17 17:02:07,406 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:02:07,407 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:02:07,408 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: move(String), 10(Integer)
2018-12-17 17:02:07,415 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 17:02:25,696 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:02:25,697 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:02:25,700 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:02:25,702 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 17:02:25,703 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: status(String)
2018-12-17 17:02:25,719 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:02:25,728 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:status
2018-12-17 17:02:25,730 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:02:25,730 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: status(String)
2018-12-17 17:02:25,732 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:02:25,732 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:02:25,733 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: status(String), 10(Integer)
2018-12-17 17:02:25,821 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-12-17 17:02:27,860 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:02:27,861 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:02:27,863 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:02:27,865 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 17:02:27,866 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: persist(String)
2018-12-17 17:02:27,881 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:02:27,900 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:persist
2018-12-17 17:02:27,901 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:02:27,902 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: persist(String)
2018-12-17 17:02:27,904 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:02:27,905 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:02:27,905 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: persist(String), 10(Integer)
2018-12-17 17:02:27,913 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-12-17 17:02:48,651 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:02:48,652 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:02:48,654 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:02:48,655 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 17:02:48,657 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: plenty(String)
2018-12-17 17:02:48,672 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:02:48,684 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:plenty
2018-12-17 17:02:48,685 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:02:48,686 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: plenty(String)
2018-12-17 17:02:48,687 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:02:48,688 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:02:48,688 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: plenty(String), 10(Integer)
2018-12-17 17:02:48,695 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-12-17 17:03:12,521 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:03:12,521 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:03:12,523 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:03:12,525 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 17:03:12,526 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: direct(String)
2018-12-17 17:03:12,537 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:03:12,548 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:direct
2018-12-17 17:03:12,550 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:03:12,551 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: direct(String)
2018-12-17 17:03:12,554 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:03:12,554 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:03:12,555 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: direct(String), 10(Integer)
2018-12-17 17:03:12,559 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 17:03:12,730 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:03:12,731 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:03:12,738 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:03:12,740 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 17:03:12,741 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: reside(String)
2018-12-17 17:03:12,749 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:03:12,757 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:reside
2018-12-17 17:03:12,763 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:03:12,764 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: reside(String)
2018-12-17 17:03:12,767 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:03:12,768 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:03:12,768 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: reside(String), 10(Integer)
2018-12-17 17:03:12,776 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 17:03:34,341 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:03:34,341 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:03:34,344 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:03:34,356 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:convince
2018-12-17 17:03:34,358 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:03:34,359 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: convince(String)
2018-12-17 17:03:34,363 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:03:34,365 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:03:34,368 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: convince(String), 10(Integer)
2018-12-17 17:03:34,378 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 7
2018-12-17 17:03:49,016 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:03:49,016 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:03:49,018 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:03:49,019 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 17:03:49,020 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: state(String)
2018-12-17 17:03:49,030 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:03:49,039 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:state
2018-12-17 17:03:49,046 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:03:49,046 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: state(String)
2018-12-17 17:03:49,050 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:03:49,051 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:03:49,051 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: state(String), 10(Integer)
2018-12-17 17:03:49,056 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 17:03:52,404 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:03:52,404 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:03:52,406 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:03:52,407 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 17:03:52,408 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: multiple(String)
2018-12-17 17:03:52,417 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:03:52,432 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:multiple
2018-12-17 17:03:52,433 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:03:52,434 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: multiple(String)
2018-12-17 17:03:52,438 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:03:52,439 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:03:52,440 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: multiple(String), 10(Integer)
2018-12-17 17:03:52,451 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 3
2018-12-17 17:03:52,647 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:03:52,648 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:03:52,650 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:03:52,651 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 17:03:52,652 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: stuff(String)
2018-12-17 17:03:52,662 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:03:52,669 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:stuff
2018-12-17 17:03:52,671 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:03:52,671 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: stuff(String)
2018-12-17 17:03:52,674 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:03:52,679 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:03:52,679 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: stuff(String), 10(Integer)
2018-12-17 17:03:52,692 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 5
2018-12-17 17:03:57,699 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:03:57,700 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:03:57,704 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:04:02,188 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:04:02,189 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:04:02,192 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:04:02,196 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 17:04:02,197 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: college(String)
2018-12-17 17:04:02,209 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:04:02,219 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:college
2018-12-17 17:04:02,221 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:04:02,221 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: college(String)
2018-12-17 17:04:02,225 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:04:02,226 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:04:02,226 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: college(String), 10(Integer)
2018-12-17 17:04:02,233 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 17:04:04,803 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:04:04,804 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:04:04,807 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:04:04,809 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 17:04:04,810 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: state(String)
2018-12-17 17:04:04,838 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:04:04,852 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:state
2018-12-17 17:04:04,855 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:04:04,855 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: state(String)
2018-12-17 17:04:04,858 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:04:04,859 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:04:04,860 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: state(String), 10(Integer)
2018-12-17 17:04:04,865 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 17:04:14,403 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:04:14,404 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:04:14,405 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:04:14,812 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:04:14,813 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:04:14,815 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:04:14,816 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 17:04:14,817 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: construct(String)
2018-12-17 17:04:14,827 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:04:14,835 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:construct
2018-12-17 17:04:14,838 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:04:14,838 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: construct(String)
2018-12-17 17:04:14,841 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:04:14,842 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:04:14,843 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: construct(String), 10(Integer)
2018-12-17 17:04:14,857 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 17:04:16,551 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:04:16,552 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:04:16,553 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:04:16,555 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 17:04:16,555 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: stand(String)
2018-12-17 17:04:16,565 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:04:16,633 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:stand
2018-12-17 17:04:16,635 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:04:16,635 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: stand(String)
2018-12-17 17:04:16,639 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:04:16,640 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:04:16,640 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: stand(String), 10(Integer)
2018-12-17 17:04:16,647 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 17:04:19,620 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:04:19,621 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:04:19,624 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:04:19,625 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 17:04:19,626 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: compatible(String)
2018-12-17 17:04:19,634 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:04:19,641 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:compatible
2018-12-17 17:04:19,644 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:04:19,644 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: compatible(String)
2018-12-17 17:04:19,646 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:04:19,647 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:04:19,648 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: compatible(String), 10(Integer)
2018-12-17 17:04:19,660 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-12-17 17:04:25,611 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:04:25,612 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:04:25,614 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:04:25,749 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:deviant
2018-12-17 17:04:25,751 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:04:25,752 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: deviant(String)
2018-12-17 17:04:25,755 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:04:25,756 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:04:25,756 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: deviant(String), 10(Integer)
2018-12-17 17:04:25,766 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 9
2018-12-17 17:04:26,624 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:04:26,625 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:04:26,626 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:04:26,628 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 17:04:26,628 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: impress(String)
2018-12-17 17:04:26,639 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:04:26,656 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:impress
2018-12-17 17:04:26,661 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:04:26,661 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: impress(String)
2018-12-17 17:04:26,664 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:04:26,666 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:04:26,666 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: impress(String), 10(Integer)
2018-12-17 17:04:26,670 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 17:04:31,197 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:04:31,198 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:04:31,201 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:04:31,203 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 17:04:31,204 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: motor(String)
2018-12-17 17:04:31,217 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:04:31,261 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:motor
2018-12-17 17:04:31,262 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:04:31,263 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: motor(String)
2018-12-17 17:04:31,265 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:04:31,266 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:04:31,266 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: motor(String), 10(Integer)
2018-12-17 17:04:31,272 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 17:04:33,236 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:04:33,238 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:04:33,241 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:04:33,243 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 17:04:33,244 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: stem(String)
2018-12-17 17:04:33,257 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:04:33,277 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:stem
2018-12-17 17:04:33,279 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:04:33,280 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: stem(String)
2018-12-17 17:04:33,282 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:04:33,282 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:04:33,283 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: stem(String), 10(Integer)
2018-12-17 17:04:33,291 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 5
2018-12-17 17:04:35,891 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:04:35,892 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:04:35,895 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:04:35,896 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 17:04:35,897 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: energy(String)
2018-12-17 17:04:35,916 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:04:35,947 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:energy
2018-12-17 17:04:35,949 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:04:35,949 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: energy(String)
2018-12-17 17:04:35,953 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:04:35,954 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:04:35,954 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: energy(String), 10(Integer)
2018-12-17 17:04:35,964 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 17:04:44,266 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:04:44,267 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:04:44,270 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:04:44,272 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 17:04:44,273 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: uniform(String)
2018-12-17 17:04:44,279 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:04:44,286 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:uniform
2018-12-17 17:04:44,289 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:04:44,290 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: uniform(String)
2018-12-17 17:04:44,293 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:04:44,294 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:04:44,295 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: uniform(String), 10(Integer)
2018-12-17 17:04:44,302 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-12-17 17:04:46,010 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:04:46,011 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:04:46,012 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:04:46,040 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:method
2018-12-17 17:04:46,050 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:04:46,052 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: method(String)
2018-12-17 17:04:46,055 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:04:46,056 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:04:46,057 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: method(String), 10(Integer)
2018-12-17 17:04:46,072 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-12-17 17:07:35,878 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:07:35,878 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:07:35,880 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:07:35,881 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 17:07:35,882 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: stand(String)
2018-12-17 17:07:35,892 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:07:35,921 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:stand
2018-12-17 17:07:35,923 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:07:35,923 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: stand(String)
2018-12-17 17:07:35,926 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:07:35,927 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:07:35,928 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: stand(String), 10(Integer)
2018-12-17 17:07:35,933 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 17:07:38,817 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:07:38,818 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:07:38,819 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:07:38,826 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:stable
2018-12-17 17:07:38,827 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:07:38,828 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: stable(String)
2018-12-17 17:07:38,834 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:07:38,834 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:07:38,835 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: stable(String), 10(Integer)
2018-12-17 17:07:38,840 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 17:07:39,228 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:07:39,228 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:07:39,230 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:07:39,231 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 17:07:39,232 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: direct(String)
2018-12-17 17:07:39,239 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:07:39,246 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:direct
2018-12-17 17:07:39,248 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:07:39,248 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: direct(String)
2018-12-17 17:07:39,250 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:07:39,250 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:07:39,251 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: direct(String), 10(Integer)
2018-12-17 17:07:39,254 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 17:07:41,691 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:07:41,692 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:07:41,694 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:07:41,696 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 17:07:41,697 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: depreciate(String)
2018-12-17 17:07:41,714 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:07:41,766 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:depreciate
2018-12-17 17:07:41,767 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:07:41,768 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: depreciate(String)
2018-12-17 17:07:41,773 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:07:41,773 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:07:41,774 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: depreciate(String), 10(Integer)
2018-12-17 17:07:41,783 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 3
2018-12-17 17:07:43,170 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:07:43,171 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:07:43,175 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:07:43,189 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:prize
2018-12-17 17:07:43,196 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:07:43,196 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: prize(String)
2018-12-17 17:07:43,201 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:07:43,202 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:07:43,203 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: prize(String), 10(Integer)
2018-12-17 17:07:43,216 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 5
2018-12-17 17:07:50,547 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:07:50,547 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:07:50,550 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:07:50,551 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 17:07:50,551 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: construct(String)
2018-12-17 17:07:50,562 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:07:50,571 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:construct
2018-12-17 17:07:50,573 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:07:50,573 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: construct(String)
2018-12-17 17:07:50,576 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:07:50,577 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:07:50,578 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: construct(String), 10(Integer)
2018-12-17 17:07:50,596 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 17:07:55,435 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:07:55,435 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:07:55,438 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:07:55,439 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 17:07:55,440 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: form(String)
2018-12-17 17:07:55,454 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:07:55,464 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:form
2018-12-17 17:07:55,466 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:07:55,466 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: form(String)
2018-12-17 17:07:55,471 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:07:55,474 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:07:55,475 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: form(String), 10(Integer)
2018-12-17 17:07:55,480 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 17:10:04,267 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:10:04,268 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:10:04,270 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:10:04,272 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 17:10:04,272 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: deviant(String)
2018-12-17 17:10:04,282 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:10:04,293 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:deviant
2018-12-17 17:10:04,295 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:10:04,296 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: deviant(String)
2018-12-17 17:10:04,299 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:10:04,300 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:10:04,300 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: deviant(String), 10(Integer)
2018-12-17 17:10:04,311 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 9
2018-12-17 17:10:04,822 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:10:04,823 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:10:04,825 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:10:04,834 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:replica
2018-12-17 17:10:04,836 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:10:04,837 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: replica(String)
2018-12-17 17:10:04,840 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:10:04,840 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:10:04,841 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: replica(String), 10(Integer)
2018-12-17 17:10:04,851 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-12-17 17:10:16,902 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:10:16,903 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:10:16,907 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:10:16,909 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 17:10:16,911 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: form(String)
2018-12-17 17:10:16,933 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:10:16,940 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:form
2018-12-17 17:10:16,942 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:10:16,943 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: form(String)
2018-12-17 17:10:16,946 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:10:16,946 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:10:16,947 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: form(String), 10(Integer)
2018-12-17 17:10:16,950 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 17:11:24,709 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:11:24,710 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:11:24,711 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:11:24,713 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 17:11:24,713 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: form(String)
2018-12-17 17:11:24,725 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:11:24,736 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:form
2018-12-17 17:11:24,739 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:11:24,740 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: form(String)
2018-12-17 17:11:24,743 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:11:24,744 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:11:24,744 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: form(String), 10(Integer)
2018-12-17 17:11:24,746 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 17:11:25,887 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:11:25,888 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:11:25,891 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:11:25,892 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 17:11:25,893 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: reprehend(String)
2018-12-17 17:11:25,902 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:11:25,917 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:reprehend
2018-12-17 17:11:25,919 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:11:25,919 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: reprehend(String)
2018-12-17 17:11:25,922 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:11:25,923 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:11:25,923 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: reprehend(String), 10(Integer)
2018-12-17 17:11:25,935 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 6
2018-12-17 17:11:28,569 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:11:28,570 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:11:28,573 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:11:28,575 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 17:11:28,576 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: resist(String)
2018-12-17 17:11:28,595 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:11:28,604 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:resist
2018-12-17 17:11:28,607 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:11:28,607 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: resist(String)
2018-12-17 17:11:28,609 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:11:28,610 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:11:28,610 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: resist(String), 10(Integer)
2018-12-17 17:11:28,613 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 17:11:30,077 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:11:30,078 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:11:30,079 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:11:30,081 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 17:11:30,081 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: state(String)
2018-12-17 17:11:30,088 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:11:30,094 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:state
2018-12-17 17:11:30,096 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:11:30,096 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: state(String)
2018-12-17 17:11:30,099 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:11:30,099 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:11:30,100 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: state(String), 10(Integer)
2018-12-17 17:11:30,104 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 17:11:31,607 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:11:31,608 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:11:31,610 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:11:31,612 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 17:11:31,613 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: recover(String)
2018-12-17 17:11:31,631 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:11:31,637 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:recover
2018-12-17 17:11:31,639 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:11:31,639 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: recover(String)
2018-12-17 17:11:31,641 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:11:31,642 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:11:31,642 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: recover(String), 10(Integer)
2018-12-17 17:11:31,650 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 7
2018-12-17 17:11:32,827 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:11:32,828 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:11:32,830 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:11:32,831 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 17:11:32,832 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: still(String)
2018-12-17 17:11:32,847 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:11:32,857 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:still
2018-12-17 17:11:32,859 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:11:32,860 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: still(String)
2018-12-17 17:11:32,862 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:11:32,862 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:11:32,863 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: still(String), 10(Integer)
2018-12-17 17:11:32,866 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 17:13:07,211 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:13:07,212 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:13:07,243 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:13:07,245 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 17:13:07,246 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: energy(String)
2018-12-17 17:13:07,252 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:13:07,259 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:energy
2018-12-17 17:13:07,262 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:13:07,263 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: energy(String)
2018-12-17 17:13:07,266 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:13:07,266 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:13:07,267 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: energy(String), 10(Integer)
2018-12-17 17:13:07,273 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 17:13:24,138 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:13:24,139 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:13:24,157 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:13:24,158 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 17:13:24,158 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: motion(String)
2018-12-17 17:13:24,168 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:13:24,178 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:motion
2018-12-17 17:13:24,180 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:13:24,180 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: motion(String)
2018-12-17 17:13:24,184 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:13:24,190 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:13:24,191 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: motion(String), 10(Integer)
2018-12-17 17:13:24,203 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 7
2018-12-17 17:25:16,547 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:25:16,548 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:25:16,550 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:25:16,551 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 17:25:16,552 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: structure(String)
2018-12-17 17:25:16,558 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:25:16,568 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:structure
2018-12-17 17:25:16,570 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:25:16,570 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: structure(String)
2018-12-17 17:25:16,573 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:25:16,574 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:25:16,575 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: structure(String), 10(Integer)
2018-12-17 17:25:16,585 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 17:25:30,949 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:25:30,950 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:25:30,953 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:25:30,978 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:inform
2018-12-17 17:25:30,980 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:25:30,981 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: inform(String)
2018-12-17 17:25:30,984 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:25:30,984 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:25:30,985 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: inform(String), 10(Integer)
2018-12-17 17:25:30,987 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 17:25:41,820 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:25:41,821 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:25:41,823 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:25:41,825 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 17:25:41,826 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: impress(String)
2018-12-17 17:25:41,840 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:25:41,851 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:impress
2018-12-17 17:25:41,854 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:25:41,855 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: impress(String)
2018-12-17 17:25:41,858 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:25:41,859 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:25:41,859 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: impress(String), 10(Integer)
2018-12-17 17:25:41,862 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 17:25:54,774 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:25:54,774 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:25:54,778 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:25:54,791 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:destruct
2018-12-17 17:25:54,793 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:25:54,794 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: destruct(String)
2018-12-17 17:25:54,797 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:25:54,797 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:25:54,798 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: destruct(String), 10(Integer)
2018-12-17 17:25:54,805 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 17:26:16,935 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:26:16,936 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:26:16,939 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:26:16,941 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 17:26:16,942 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: resist(String)
2018-12-17 17:26:16,960 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:26:16,992 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:resist
2018-12-17 17:26:16,994 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:26:16,995 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: resist(String)
2018-12-17 17:26:17,004 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:26:17,006 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:26:17,006 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: resist(String), 10(Integer)
2018-12-17 17:26:17,012 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 17:26:52,963 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:26:52,964 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:26:52,968 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:26:52,969 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 17:26:52,969 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: sediment(String)
2018-12-17 17:26:52,984 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:26:52,997 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:sediment
2018-12-17 17:26:53,001 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:26:53,001 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: sediment(String)
2018-12-17 17:26:53,004 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:26:53,005 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:26:53,005 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: sediment(String), 10(Integer)
2018-12-17 17:26:53,012 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 3
2018-12-17 17:30:39,346 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:30:39,347 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:30:39,351 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:30:39,353 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 17:30:39,354 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: construct(String)
2018-12-17 17:30:39,370 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:30:39,379 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:construct
2018-12-17 17:30:39,380 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:30:39,381 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: construct(String)
2018-12-17 17:30:39,383 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:30:39,383 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:30:39,383 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: construct(String), 10(Integer)
2018-12-17 17:30:39,391 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 17:30:50,523 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:30:50,524 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:30:50,527 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:30:50,529 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 17:30:50,530 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: ascribe(String)
2018-12-17 17:30:50,551 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:30:50,596 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:ascribe
2018-12-17 17:30:50,598 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:30:50,599 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: ascribe(String)
2018-12-17 17:30:50,601 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:30:50,602 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:30:50,603 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: ascribe(String), 10(Integer)
2018-12-17 17:30:50,611 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 4
2018-12-17 17:31:48,558 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:31:48,559 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:31:48,564 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:31:48,592 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:prize
2018-12-17 17:31:48,594 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:31:48,594 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: prize(String)
2018-12-17 17:31:48,599 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:31:48,599 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:31:48,600 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: prize(String), 10(Integer)
2018-12-17 17:31:48,610 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 5
2018-12-17 17:34:58,595 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:34:58,596 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:34:58,601 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:34:58,602 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 17:34:58,603 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: assist(String)
2018-12-17 17:34:58,613 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:34:58,629 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:assist
2018-12-17 17:34:58,631 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:34:58,632 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: assist(String)
2018-12-17 17:34:58,639 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:34:58,641 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:34:58,641 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: assist(String), 10(Integer)
2018-12-17 17:34:58,646 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 17:34:58,801 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:34:58,801 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:34:58,824 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:34:58,825 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 17:34:58,825 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: session(String)
2018-12-17 17:34:58,837 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:34:58,864 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:session
2018-12-17 17:34:58,866 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:34:58,866 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: session(String)
2018-12-17 17:34:58,872 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:34:58,873 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:34:58,874 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: session(String), 10(Integer)
2018-12-17 17:34:58,887 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 3
2018-12-17 17:34:59,213 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:34:59,213 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:34:59,215 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:34:59,216 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 17:34:59,217 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: form(String)
2018-12-17 17:34:59,227 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:34:59,237 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:form
2018-12-17 17:34:59,239 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:34:59,239 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: form(String)
2018-12-17 17:34:59,243 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:34:59,244 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:34:59,245 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: form(String), 10(Integer)
2018-12-17 17:34:59,247 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 17:35:02,108 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:35:02,109 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:35:02,111 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:35:02,113 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 17:35:02,114 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: state(String)
2018-12-17 17:35:02,134 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:35:02,144 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:state
2018-12-17 17:35:02,145 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:35:02,146 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: state(String)
2018-12-17 17:35:02,148 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:35:02,148 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:35:02,149 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: state(String), 10(Integer)
2018-12-17 17:35:02,152 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 10
2018-12-17 17:35:08,283 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select * FROM `word` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `word`)-(SELECT MIN(id) FROM `word`))+(SELECT MIN(id) FROM `word`)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1; 
2018-12-17 17:35:08,284 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: 
2018-12-17 17:35:08,288 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:35:08,289 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( word = ? ) 
2018-12-17 17:35:08,289 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: complicate(String)
2018-12-17 17:35:08,297 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:35:08,310 INFO (WordController.java:133)- coreWordPage method: pn:1,coreWord:complicate
2018-12-17 17:35:08,311 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: SELECT count(0) FROM word WHERE (coreword = ?) 
2018-12-17 17:35:08,311 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: complicate(String)
2018-12-17 17:35:08,313 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 1
2018-12-17 17:35:08,314 DEBUG (BaseJdbcLogger.java:159)- ==>  Preparing: select id, word, chinese, root, coreword, sentence, note,phonetic from word WHERE ( coreword = ? ) LIMIT ? 
2018-12-17 17:35:08,314 DEBUG (BaseJdbcLogger.java:159)- ==> Parameters: complicate(String), 10(Integer)
2018-12-17 17:35:08,331 DEBUG (BaseJdbcLogger.java:159)- <==      Total: 7
